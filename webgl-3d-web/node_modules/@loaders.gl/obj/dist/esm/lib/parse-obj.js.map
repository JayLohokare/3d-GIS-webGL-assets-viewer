{"version":3,"sources":["../../../src/lib/parse-obj.js"],"names":["OBJECT_RE","MATERIAL_RE","MATERIAL_USE_RE","MeshMaterial","index","name","mtllib","smooth","groupStart","groupEnd","groupCount","inherited","MeshObject","geometry","vertices","normals","colors","uvs","materials","fromDeclaration","libraries","previous","_finalize","splice","material","length","Array","isArray","undefined","push","end","lastMultiMaterial","currentMaterial","mi","ParserState","objects","object","materialLibraries","startObject","previousMaterial","clone","declared","value","len","parseInt","a","b","c","src","dst","ua","ub","uc","na","nb","nc","vLen","ia","parseVertexIndex","ib","ic","addVertex","uvLen","parseUVIndex","addUV","nLen","parseNormalIndex","addNormal","addColor","type","vertex","addVertexPoint","addVertexLine","uv","addUVLine","text","state","indexOf","replace","lines","split","line","lineFirstChar","lineLength","result","trimLeft","i","l","trim","charAt","data","parseFloat","lineData","substr","vertexData","faceVertices","j","jl","vertexParts","v1","v2","v3","addFace","lineParts","substring","lineVertices","lineUVs","li","llen","parts","addLineGeometry","pointData","addPointGeometry","exec","test","startMaterial","toLowerCase","Error","finalize","meshes","mesh","header","vertexCount","attributes","mode","POSITION","Float32Array","size","NORMAL","COLOR_0","TEXCOORD_0","sourceMaterial","_material","flatShading"],"mappings":"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","sourcesContent":["// OBJ Loader, adapted from THREE.js (MIT license)\n//\n// Attributions per original THREE.js source file:\n//\n// @author mrdoob / http://mrdoob.com/\n\n// o object_name | g group_name\nconst OBJECT_RE = /^[og]\\s*(.+)?/;\n// mtllib file_reference\nconst MATERIAL_RE = /^mtllib /;\n// usemtl material_name\nconst MATERIAL_USE_RE = /^usemtl /;\n\nclass MeshMaterial {\n  constructor({index, name = '', mtllib, smooth, groupStart}) {\n    this.index = index;\n    this.name = name;\n    this.mtllib = mtllib;\n    this.smooth = smooth;\n    this.groupStart = groupStart;\n    this.groupEnd = -1;\n    this.groupCount = -1;\n    this.inherited = false;\n  }\n\n  clone(index = this.index) {\n    return new MeshMaterial({\n      index,\n      name: this.name,\n      mtllib: this.mtllib,\n      smooth: this.smooth,\n      groupStart: 0\n    });\n  }\n}\n\nclass MeshObject {\n  constructor(name = '') {\n    this.name = name;\n\n    this.geometry = {\n      vertices: [],\n      normals: [],\n      colors: [],\n      uvs: []\n    };\n\n    this.materials = [];\n    this.smooth = true;\n\n    this.fromDeclaration = null;\n  }\n\n  startMaterial(name, libraries) {\n    const previous = this._finalize(false);\n\n    // New usemtl declaration overwrites an inherited material, except if faces were declared\n    // after the material, then it must be preserved for proper MultiMaterial continuation.\n    if (previous && (previous.inherited || previous.groupCount <= 0)) {\n      this.materials.splice(previous.index, 1);\n    }\n\n    const material = new MeshMaterial({\n      index: this.materials.length,\n      name,\n      mtllib:\n        Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : '',\n      smooth: previous !== undefined ? previous.smooth : this.smooth,\n      groupStart: previous !== undefined ? previous.groupEnd : 0\n    });\n\n    this.materials.push(material);\n\n    return material;\n  }\n\n  currentMaterial() {\n    if (this.materials.length > 0) {\n      return this.materials[this.materials.length - 1];\n    }\n\n    return undefined;\n  }\n\n  _finalize(end) {\n    const lastMultiMaterial = this.currentMaterial();\n    if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n      lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n      lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n      lastMultiMaterial.inherited = false;\n    }\n\n    // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n    if (end && this.materials.length > 1) {\n      for (let mi = this.materials.length - 1; mi >= 0; mi--) {\n        if (this.materials[mi].groupCount <= 0) {\n          this.materials.splice(mi, 1);\n        }\n      }\n    }\n\n    // Guarantee at least one empty material, this makes the creation later more straight forward.\n    if (end && this.materials.length === 0) {\n      this.materials.push({\n        name: '',\n        smooth: this.smooth\n      });\n    }\n\n    return lastMultiMaterial;\n  }\n}\n\nclass ParserState {\n  constructor() {\n    this.objects = [];\n    this.object = null;\n\n    this.vertices = [];\n    this.normals = [];\n    this.colors = [];\n    this.uvs = [];\n\n    this.materialLibraries = [];\n\n    this.startObject('', false);\n  }\n\n  startObject(name, fromDeclaration = true) {\n    // If the current object (initial from reset) is not from a g/o declaration in the parsed\n    // file. We need to use it for the first parsed g/o to keep things in sync.\n    if (this.object && !this.object.fromDeclaration) {\n      this.object.name = name;\n      this.object.fromDeclaration = fromDeclaration;\n      return;\n    }\n\n    const previousMaterial =\n      this.object && typeof this.object.currentMaterial === 'function'\n        ? this.object.currentMaterial()\n        : undefined;\n\n    if (this.object && typeof this.object._finalize === 'function') {\n      this.object._finalize(true);\n    }\n\n    this.object = new MeshObject(name);\n    this.object.fromDeclaration = fromDeclaration;\n\n    // Inherit previous objects material.\n    // Spec tells us that a declared material must be set to all objects until a new material is declared.\n    // If a usemtl declaration is encountered while this new object is being parsed, it will\n    // overwrite the inherited material. Exception being that there was already face declarations\n    // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n    if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\n      const declared = previousMaterial.clone(0);\n      declared.inherited = true;\n      this.object.materials.push(declared);\n    }\n\n    this.objects.push(this.object);\n  }\n\n  finalize() {\n    if (this.object && typeof this.object._finalize === 'function') {\n      this.object._finalize(true);\n    }\n  }\n\n  parseVertexIndex(value, len) {\n    const index = parseInt(value, 10);\n    return (index >= 0 ? index - 1 : index + len / 3) * 3;\n  }\n\n  parseNormalIndex(value, len) {\n    const index = parseInt(value, 10);\n    return (index >= 0 ? index - 1 : index + len / 3) * 3;\n  }\n\n  parseUVIndex(value, len) {\n    const index = parseInt(value, 10);\n    return (index >= 0 ? index - 1 : index + len / 2) * 2;\n  }\n\n  addVertex(a, b, c) {\n    const src = this.vertices;\n    const dst = this.object.geometry.vertices;\n\n    dst.push(src[a + 0], src[a + 1], src[a + 2]);\n    dst.push(src[b + 0], src[b + 1], src[b + 2]);\n    dst.push(src[c + 0], src[c + 1], src[c + 2]);\n  }\n\n  addVertexPoint(a) {\n    const src = this.vertices;\n    const dst = this.object.geometry.vertices;\n\n    dst.push(src[a + 0], src[a + 1], src[a + 2]);\n  }\n\n  addVertexLine(a) {\n    const src = this.vertices;\n    const dst = this.object.geometry.vertices;\n\n    dst.push(src[a + 0], src[a + 1], src[a + 2]);\n  }\n\n  addNormal(a, b, c) {\n    const src = this.normals;\n    const dst = this.object.geometry.normals;\n\n    dst.push(src[a + 0], src[a + 1], src[a + 2]);\n    dst.push(src[b + 0], src[b + 1], src[b + 2]);\n    dst.push(src[c + 0], src[c + 1], src[c + 2]);\n  }\n\n  addColor(a, b, c) {\n    const src = this.colors;\n    const dst = this.object.geometry.colors;\n\n    dst.push(src[a + 0], src[a + 1], src[a + 2]);\n    dst.push(src[b + 0], src[b + 1], src[b + 2]);\n    dst.push(src[c + 0], src[c + 1], src[c + 2]);\n  }\n\n  addUV(a, b, c) {\n    const src = this.uvs;\n    const dst = this.object.geometry.uvs;\n\n    dst.push(src[a + 0], src[a + 1]);\n    dst.push(src[b + 0], src[b + 1]);\n    dst.push(src[c + 0], src[c + 1]);\n  }\n\n  addUVLine(a) {\n    const src = this.uvs;\n    const dst = this.object.geometry.uvs;\n\n    dst.push(src[a + 0], src[a + 1]);\n  }\n\n  // eslint-disable-next-line max-params\n  addFace(a, b, c, ua, ub, uc, na, nb, nc) {\n    const vLen = this.vertices.length;\n\n    let ia = this.parseVertexIndex(a, vLen);\n    let ib = this.parseVertexIndex(b, vLen);\n    let ic = this.parseVertexIndex(c, vLen);\n\n    this.addVertex(ia, ib, ic);\n\n    if (ua !== undefined && ua !== '') {\n      const uvLen = this.uvs.length;\n      ia = this.parseUVIndex(ua, uvLen);\n      ib = this.parseUVIndex(ub, uvLen);\n      ic = this.parseUVIndex(uc, uvLen);\n      this.addUV(ia, ib, ic);\n    }\n\n    if (na !== undefined && na !== '') {\n      // Normals are many times the same. If so, skip function call and parseInt.\n      const nLen = this.normals.length;\n      ia = this.parseNormalIndex(na, nLen);\n\n      ib = na === nb ? ia : this.parseNormalIndex(nb, nLen);\n      ic = na === nc ? ia : this.parseNormalIndex(nc, nLen);\n\n      this.addNormal(ia, ib, ic);\n    }\n\n    if (this.colors.length > 0) {\n      this.addColor(ia, ib, ic);\n    }\n  }\n\n  addPointGeometry(vertices) {\n    this.object.geometry.type = 'Points';\n\n    const vLen = this.vertices.length;\n\n    for (const vertex of vertices) {\n      this.addVertexPoint(this.parseVertexIndex(vertex, vLen));\n    }\n  }\n\n  addLineGeometry(vertices, uvs) {\n    this.object.geometry.type = 'Line';\n\n    const vLen = this.vertices.length;\n    const uvLen = this.uvs.length;\n\n    for (const vertex of vertices) {\n      this.addVertexLine(this.parseVertexIndex(vertex, vLen));\n    }\n\n    for (const uv of uvs) {\n      this.addUVLine(this.parseUVIndex(uv, uvLen));\n    }\n  }\n}\n\n// eslint-disable-next-line max-statements, complexity\nexport default text => {\n  const state = new ParserState();\n\n  if (text.indexOf('\\r\\n') !== -1) {\n    // This is faster than String.split with regex that splits on both\n    text = text.replace(/\\r\\n/g, '\\n');\n  }\n\n  if (text.indexOf('\\\\\\n') !== -1) {\n    // join lines separated by a line continuation character (\\)\n    text = text.replace(/\\\\\\n/g, '');\n  }\n\n  const lines = text.split('\\n');\n  let line = '';\n  let lineFirstChar = '';\n  let lineLength = 0;\n  let result = [];\n\n  // Faster to just trim left side of the line. Use if available.\n  const trimLeft = typeof ''.trimLeft === 'function';\n\n  /* eslint-disable no-continue, max-depth */\n  for (let i = 0, l = lines.length; i < l; i++) {\n    line = lines[i];\n    line = trimLeft ? line.trimLeft() : line.trim();\n    lineLength = line.length;\n\n    if (lineLength === 0) continue;\n\n    lineFirstChar = line.charAt(0);\n\n    // @todo invoke passed in handler if any\n    if (lineFirstChar === '#') continue;\n\n    if (lineFirstChar === 'v') {\n      const data = line.split(/\\s+/);\n\n      switch (data[0]) {\n        case 'v':\n          state.vertices.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n          if (data.length === 8) {\n            state.colors.push(parseFloat(data[4]), parseFloat(data[5]), parseFloat(data[6]));\n          }\n          break;\n        case 'vn':\n          state.normals.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n          break;\n        case 'vt':\n          state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\n          break;\n        default:\n      }\n    } else if (lineFirstChar === 'f') {\n      const lineData = line.substr(1).trim();\n      const vertexData = lineData.split(/\\s+/);\n      const faceVertices = [];\n\n      // Parse the face vertex data into an easy to work with format\n\n      for (let j = 0, jl = vertexData.length; j < jl; j++) {\n        const vertex = vertexData[j];\n\n        if (vertex.length > 0) {\n          const vertexParts = vertex.split('/');\n          faceVertices.push(vertexParts);\n        }\n      }\n\n      // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n      const v1 = faceVertices[0];\n\n      for (let j = 1, jl = faceVertices.length - 1; j < jl; j++) {\n        const v2 = faceVertices[j];\n        const v3 = faceVertices[j + 1];\n\n        state.addFace(v1[0], v2[0], v3[0], v1[1], v2[1], v3[1], v1[2], v2[2], v3[2]);\n      }\n    } else if (lineFirstChar === 'l') {\n      const lineParts = line\n        .substring(1)\n        .trim()\n        .split(' ');\n      let lineVertices;\n      const lineUVs = [];\n\n      if (line.indexOf('/') === -1) {\n        lineVertices = lineParts;\n      } else {\n        lineVertices = [];\n        for (let li = 0, llen = lineParts.length; li < llen; li++) {\n          const parts = lineParts[li].split('/');\n\n          if (parts[0] !== '') lineVertices.push(parts[0]);\n          if (parts[1] !== '') lineUVs.push(parts[1]);\n        }\n      }\n      state.addLineGeometry(lineVertices, lineUVs);\n    } else if (lineFirstChar === 'p') {\n      const lineData = line.substr(1).trim();\n      const pointData = lineData.split(' ');\n\n      state.addPointGeometry(pointData);\n    } else if ((result = OBJECT_RE.exec(line)) !== null) {\n      // o object_name\n      // or\n      // g group_name\n\n      // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n      // var name = result[ 0 ].substr( 1 ).trim();\n      const name = (' ' + result[0].substr(1).trim()).substr(1); // eslint-disable-line\n\n      state.startObject(name);\n    } else if (MATERIAL_USE_RE.test(line)) {\n      // material\n\n      state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\n    } else if (MATERIAL_RE.test(line)) {\n      // mtl file\n\n      state.materialLibraries.push(line.substring(7).trim());\n    } else if (lineFirstChar === 's') {\n      result = line.split(' ');\n\n      // smooth shading\n\n      // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n      // but does not define a usemtl for each face set.\n      // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n      // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n      // where explicit usemtl defines geometry groups.\n      // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n      /*\n       * http://paulbourke.net/dataformats/obj/\n       * or\n       * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n       *\n       * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n       * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n       * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n       * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n       * than 0.\"\n       */\n      if (result.length > 1) {\n        const value = result[1].trim().toLowerCase();\n        state.object.smooth = value !== '0' && value !== 'off';\n      } else {\n        // ZBrush can produce \"s\" lines #11707\n        state.object.smooth = true;\n      }\n      const material = state.object.currentMaterial();\n      if (material) material.smooth = state.object.smooth;\n    } else {\n      // Handle null terminated files without exception\n      if (line === '\\0') continue;\n\n      throw new Error(`Unexpected line: \"${line}\"`);\n    }\n  }\n\n  state.finalize();\n\n  const meshes = [];\n  const materials = [];\n\n  for (const object of state.objects) {\n    const {geometry} = object;\n\n    // Skip o/g line declarations that did not follow with any faces\n    if (geometry.vertices.length === 0) continue;\n\n    const mesh = {\n      header: {\n        vertexCount: geometry.vertices.length / 3\n      },\n      attributes: {}\n    };\n\n    switch (geometry.type) {\n      case 'Points':\n        mesh.mode = 0; // GL.POINTS\n        break;\n      case 'Line':\n        mesh.mode = 1; // GL.LINES\n        break;\n      default:\n        mesh.mode = 4; // GL.TRIANGLES\n        break;\n    }\n\n    mesh.attributes.POSITION = {value: new Float32Array(geometry.vertices), size: 3};\n\n    if (geometry.normals.length > 0) {\n      mesh.attributes.NORMAL = {value: new Float32Array(geometry.normals), size: 3};\n    }\n\n    if (geometry.colors.length > 0) {\n      mesh.attributes.COLOR_0 = {value: new Float32Array(geometry.colors), size: 3};\n    }\n\n    if (geometry.uvs.length > 0) {\n      mesh.attributes.TEXCOORD_0 = {value: new Float32Array(geometry.uvs), size: 2};\n    }\n\n    // Create materials\n    mesh.materials = [];\n    for (const sourceMaterial of object.materials) {\n      // TODO - support full spec\n      const _material = {\n        name: sourceMaterial.name,\n        flatShading: !sourceMaterial.smooth\n      };\n      mesh.materials.push(_material);\n      materials.push(_material);\n    }\n\n    mesh.name = object.name;\n    meshes.push(mesh);\n  }\n\n  return {meshes, materials};\n};\n"],"file":"parse-obj.js"}