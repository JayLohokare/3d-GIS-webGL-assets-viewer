{"ast":null,"code":"var _jsxFileName = \"/Users/jay_lohokare/Desktop/PPL Codes/webgl-3d-web/src/modelDetails/modelsView.js\";\nimport React, { Component } from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport ModelsListElement from \"./modelsListElement\";\nimport Materialize from \"materialize-css\";\nimport Loader from '../Components/Loader';\n\nclass ModelsView extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateInputValue = evt => {\n      this.props.store.updateSearchText(evt.target.value);\n    };\n\n    this.modelListView = () => {\n      if (this.props.store.assets !== []) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"assets-list-view\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }\n        }, this.props.store.assets.map((model, i) => /*#__PURE__*/React.createElement(ModelsListElement, {\n          model: model,\n          keyValue: i,\n          key: `${model.Equipement}-${i}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }\n        })));\n      }\n    };\n\n    this.loadingState = () => {\n      return /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 12\n        }\n      });\n    };\n\n    this.updateStatus = evt => {\n      this.props.store.updateSearchStatus(evt.target[evt.target.value].text.substring(8));\n    };\n\n    this.searchAsset = () => {\n      if (this.props.store.mapViewPort.zoom < 12) {\n        Materialize.toast({\n          html: \"Please zoom in more to load assets\",\n          displayLength: 2000,\n          classes: \"rounded\"\n        });\n      }\n\n      this.props.store.getModelList();\n      this.props.store.refeshConnectivityLayer();\n    };\n\n    this.withDataState = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modelsView\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"black menu-header center center-align valign-wrapper \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, \"EPNG AM POC\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row padding-5px search-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card valign-wrapper search-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-field col l9 s9 m9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"black-text\",\n        id: \"model_filter\",\n        placeholder: \"Search Asset\",\n        type: \"text\",\n        onChange: this.updateInputValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col l3 s3 m3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          border: \"none\",\n          backgroundColor: \"transparent\"\n        },\n        onClick: this.searchAsset,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"material-icons black-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }\n      }, \"search\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"left-align search-filters-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-field chip light-blue darken-3 white-text filter-chip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filter-chip-content \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        id: \"status_selector\",\n        onChange: this.updateStatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        defaultValue: true,\n        value: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      }, \"Status: All\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }\n      }, \"Status: New\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }\n      }, \"Status: Approved\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chip input-field light-blue darken-3 white-text filter-chip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filter-chip-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        id: \"date\",\n        type: \"text\",\n        className: \"datepicker white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }))))), this.modelListView());\n    };\n  }\n\n  componentDidMount() {\n    var context = this;\n    const today = new Date();\n    const tomorrow = new Date(today);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    var dateElems = document.querySelectorAll(\".datepicker\");\n    Materialize.Datepicker.init(dateElems, {\n      format: \"yyyy-mm-dd\",\n      defaultDate: tomorrow,\n      setDefaultDate: true,\n      container: \"body\",\n      autoClose: true,\n      selectMonths: true,\n      selectYears: 200,\n      onSelect: function (date) {\n        context.props.store.updateSearchDate(date);\n      }\n    });\n    var selectElems = document.querySelectorAll('select');\n    Materialize.FormSelect.init(selectElems);\n  }\n\n  render() {\n    const {\n      assetsLoadingState\n    } = this.props.store;\n\n    if (assetsLoadingState === false) {\n      return this.withDataState(this.props.store);\n    } else {\n      return this.loadingState();\n    }\n  }\n\n}\n\nexport default inject(\"store\")(observer(ModelsView));","map":{"version":3,"sources":["/Users/jay_lohokare/Desktop/PPL Codes/webgl-3d-web/src/modelDetails/modelsView.js"],"names":["React","Component","inject","observer","ModelsListElement","Materialize","Loader","ModelsView","updateInputValue","evt","props","store","updateSearchText","target","value","modelListView","assets","map","model","i","Equipement","loadingState","updateStatus","updateSearchStatus","text","substring","searchAsset","mapViewPort","zoom","toast","html","displayLength","classes","getModelList","refeshConnectivityLayer","withDataState","border","backgroundColor","componentDidMount","context","today","Date","tomorrow","setDate","getDate","dateElems","document","querySelectorAll","Datepicker","init","format","defaultDate","setDefaultDate","container","autoClose","selectMonths","selectYears","onSelect","date","updateSearchDate","selectElems","FormSelect","render","assetsLoadingState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport ModelsListElement from \"./modelsListElement\";\r\nimport Materialize from \"materialize-css\";\r\nimport Loader from '../Components/Loader';\r\n\r\n\r\n\r\nclass ModelsView extends Component {\r\n\r\n  componentDidMount() {\r\n    var context = this;\r\n\r\n    const today = new Date()\r\n    const tomorrow = new Date(today)\r\n    tomorrow.setDate(tomorrow.getDate() + 1)\r\n\r\n    var dateElems = document.querySelectorAll(\".datepicker\");\r\n    Materialize.Datepicker.init(dateElems, {\r\n      format: \"yyyy-mm-dd\",\r\n      defaultDate: tomorrow,\r\n      setDefaultDate: true,\r\n      container: \"body\",\r\n      autoClose: true,\r\n      selectMonths: true,\r\n      selectYears: 200,\r\n      onSelect: function(date) {\r\n        context.props.store.updateSearchDate(date);\r\n      },\r\n    });\r\n\r\n\r\n    var selectElems = document.querySelectorAll('select');\r\n    Materialize.FormSelect.init(selectElems);\r\n  }\r\n\r\n  updateInputValue = (evt) =>{\r\n    this.props.store.updateSearchText(evt.target.value);\r\n  }\r\n\r\n  modelListView = () => {\r\n    if (this.props.store.assets !== []){\r\n      return (\r\n        <div className=\"assets-list-view\">\r\n          {\r\n            this.props.store.assets.map((model,i) => (\r\n              <ModelsListElement model={model} keyValue={i} key={`${model.Equipement}-${i}`}/>\r\n            ))\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n\r\n  loadingState = () => {\r\n    return <Loader />\r\n  }\r\n\r\n  updateStatus = (evt) => {\r\n    this.props.store.updateSearchStatus(evt.target[evt.target.value].text.substring(8));\r\n  }\r\n\r\n  searchAsset = () => {\r\n    if (this.props.store.mapViewPort.zoom < 12) {\r\n      Materialize.toast({\r\n        html: \"Please zoom in more to load assets\",\r\n        displayLength: 2000,\r\n        classes: \"rounded\",\r\n      });\r\n    }\r\n      this.props.store.getModelList();\r\n      this.props.store.refeshConnectivityLayer();\r\n\r\n  }\r\n\r\n  withDataState = () => {\r\n    return (\r\n      <div className=\"modelsView\">\r\n\r\n        <div className=\"black menu-header center center-align valign-wrapper \">\r\n          <h4 className=\"white-text\">EPNG AM POC</h4>\r\n        </div>\r\n\r\n        <div className=\"white\">\r\n\r\n          <div  className=\"row padding-5px search-container\">\r\n            <div className=\"card valign-wrapper search-box\">\r\n              <div className=\"input-field col l9 s9 m9\">\r\n                <input className=\"black-text\" id=\"model_filter\" placeholder=\"Search Asset\" type=\"text\" onChange={this.updateInputValue}/>\r\n              </div>\r\n              <div className=\"col l3 s3 m3\">\r\n                <button \r\n                  style={{border: \"none\", backgroundColor: \"transparent\" }}\r\n                  onClick={this.searchAsset}>\r\n                  <i className=\"material-icons black-text\">search</i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"left-align search-filters-list\">\r\n\r\n            <div className=\"input-field chip light-blue darken-3 white-text filter-chip\">\r\n              <div className=\"filter-chip-content \">\r\n                <select id=\"status_selector\" onChange={this.updateStatus}>\r\n                  <option defaultValue value=\"0\">Status: All</option>\r\n                  <option value=\"1\">Status: New</option>\r\n                  <option value=\"2\">Status: Approved</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"chip input-field light-blue darken-3 white-text filter-chip\">\r\n              <div className=\"filter-chip-content\">\r\n                <input id=\"date\" type=\"text\" className=\"datepicker white-text\"/>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        {this.modelListView()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { assetsLoadingState } = this.props.store;\r\n    if (assetsLoadingState === false) {\r\n      return this.withDataState(this.props.store);\r\n    } else {\r\n      return this.loadingState();\r\n    }\r\n  }\r\n}\r\n\r\nexport default inject(\"store\")(observer(ModelsView));\r\n"]},"metadata":{},"sourceType":"module"}