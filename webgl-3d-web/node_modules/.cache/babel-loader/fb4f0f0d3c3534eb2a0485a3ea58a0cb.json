{"ast":null,"code":"var _jsxFileName = \"/Users/jay_lohokare/Desktop/PPL Codes/webgl-3d-web/src/webGL/dataView.js\";\nimport React from 'react';\nimport { inject, observer } from \"mobx-react\";\nconst DataView = inject('store')(observer(props => {\n  let dataList = [];\n  const ASC = 'ascending';\n\n  function sortByText(a, b, order = ASC) {\n    const diff = a.toLowerCase().localeCompare(b.toLowerCase());\n\n    if (order === ASC) {\n      return diff;\n    }\n\n    return -1 * diff;\n  }\n\n  const printPretty = (object, parent) => {\n    if (typeof object == \"string\") {\n      if (object !== null && object !== \"\") {\n        if (parent == null) {\n          dataList.push(object);\n        } else {\n          dataList.push(parent + ': \\n' + object);\n        }\n      }\n    } else {\n      for (var property in object) {\n        let propAccessor;\n\n        if (parent !== null) {\n          propAccessor = parent + \".\" + property;\n        } else {\n          propAccessor = property;\n        }\n\n        printPretty(object[property], propAccessor);\n      }\n    }\n  };\n\n  printPretty(props.store.dataPanelContent, null);\n  let dataDisplay = dataList.sort((a, b) => sortByText(a, b, ASC)).map((i, k) => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: `${i}-${k}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }\n    }, i);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-view-card dataOverLay \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-view-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col l12 s12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, \"Asset Data\"), dataDisplay, props.store.dataPanelContent.AssetId == null ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"center waves-effect waves-light btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 27\n    }\n  }, \"View\")))));\n}));\nexport default DataView;","map":{"version":3,"sources":["/Users/jay_lohokare/Desktop/PPL Codes/webgl-3d-web/src/webGL/dataView.js"],"names":["React","inject","observer","DataView","props","dataList","ASC","sortByText","a","b","order","diff","toLowerCase","localeCompare","printPretty","object","parent","push","property","propAccessor","store","dataPanelContent","dataDisplay","sort","map","i","k","AssetId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAGA,MAAMC,QAAQ,GAAGF,MAAM,CAAC,OAAD,CAAN,CAAgBC,QAAQ,CAAEE,KAAD,IAAW;AAEjD,MAAIC,QAAQ,GAAG,EAAf;AACA,QAAMC,GAAG,GAAG,WAAZ;;AAEA,WAASC,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0BC,KAAK,GAAGJ,GAAlC,EAAuC;AACnC,UAAMK,IAAI,GAAGH,CAAC,CAACI,WAAF,GAAgBC,aAAhB,CAA8BJ,CAAC,CAACG,WAAF,EAA9B,CAAb;;AAEA,QAAIF,KAAK,KAAKJ,GAAd,EAAmB;AACf,aAAOK,IAAP;AACH;;AAED,WAAO,CAAC,CAAD,GAAKA,IAAZ;AACH;;AAED,QAAMG,WAAW,GAAG,CAACC,MAAD,EAASC,MAAT,KAAmB;AACnC,QAAG,OAAOD,MAAP,IAAiB,QAApB,EAA6B;AACzB,UAAGA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,EAAjC,EAAoC;AAChC,YAAGC,MAAM,IAAE,IAAX,EAAgB;AACZX,UAAAA,QAAQ,CAACY,IAAT,CAAcF,MAAd;AACH,SAFD,MAGI;AACAV,UAAAA,QAAQ,CAACY,IAAT,CAAcD,MAAM,GAAG,MAAT,GAAmBD,MAAjC;AACH;AACJ;AACJ,KATD,MAUI;AACA,WAAI,IAAIG,QAAR,IAAoBH,MAApB,EAA2B;AACvB,YAAII,YAAJ;;AACA,YAAGH,MAAM,KAAK,IAAd,EAAmB;AACfG,UAAAA,YAAY,GAAGH,MAAM,GAAG,GAAT,GAAeE,QAA9B;AACH,SAFD,MAGI;AACAC,UAAAA,YAAY,GAAGD,QAAf;AACH;;AACDJ,QAAAA,WAAW,CAACC,MAAM,CAACG,QAAD,CAAP,EAAmBC,YAAnB,CAAX;AACH;AACJ;AACJ,GAvBD;;AAyBAL,EAAAA,WAAW,CAACV,KAAK,CAACgB,KAAN,CAAYC,gBAAb,EAA+B,IAA/B,CAAX;AAEA,MAAIC,WAAW,GAAGjB,QAAQ,CAACkB,IAAT,CAAc,CAACf,CAAD,EAAIC,CAAJ,KAAUF,UAAU,CAACC,CAAD,EAAIC,CAAJ,EAAOH,GAAP,CAAlC,EAA+CkB,GAA/C,CAAmD,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC3E,wBAAO;AAAG,MAAA,GAAG,EAAG,GAAED,CAAE,IAAGC,CAAE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBD,CAAtB,CAAP;AACH,GAFiB,CAAlB;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKH,WAFL,EAIIlB,KAAK,CAACgB,KAAN,CAAYC,gBAAZ,CAA6BM,OAA7B,IAAwC,IAAxC,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,gBAEE;AAAQ,IAAA,SAAS,EAAC,qCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANN,CADJ,CADJ,CADJ,CADJ;AAiBH,CAhEwC,CAAxB,CAAjB;AAkEA,eAAexB,QAAf","sourcesContent":["import React from 'react';\nimport { inject, observer } from \"mobx-react\";\n\n\nconst DataView = inject('store')(observer((props) => {\n\n    let dataList = [];\n    const ASC = 'ascending';\n\n    function sortByText(a, b, order = ASC) {\n        const diff = a.toLowerCase().localeCompare(b.toLowerCase());\n\n        if (order === ASC) {\n            return diff;\n        }\n\n        return -1 * diff;\n    }\n\n    const printPretty = (object, parent) =>{\n        if(typeof object == \"string\"){\n            if(object !== null && object !== \"\"){\n                if(parent==null){\n                    dataList.push(object);\n                }\n                else{\n                    dataList.push(parent + ': \\n' +  object);\n                }\n            }\n        }\n        else{\n            for(var property in object){\n                let propAccessor\n                if(parent !== null){\n                    propAccessor = parent + \".\" + property;\n                }\n                else{\n                    propAccessor = property;\n                }\n                printPretty(object[property], propAccessor);\n            }\n        }\n    }\n\n    printPretty(props.store.dataPanelContent, null)\n\n    let dataDisplay = dataList.sort((a, b) => sortByText(a, b, ASC)).map((i, k) => {\n        return <p key={`${i}-${k}`}>{i}</p>\n    });\n\n\n    return (\n        <div className=\"data-view-card dataOverLay \">\n            <div className=\"data-view-container\">\n                <div className=\"row \">\n                    <div className=\"col l12 s12\">\n                        <h5>Asset Data</h5>\n                        {dataDisplay}\n                        {\n                        props.store.dataPanelContent.AssetId == null ?\n                        <p></p>\n                        : <button className=\"center waves-effect waves-light btn\">View</button>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}))\n\nexport default DataView;\n"]},"metadata":{},"sourceType":"module"}