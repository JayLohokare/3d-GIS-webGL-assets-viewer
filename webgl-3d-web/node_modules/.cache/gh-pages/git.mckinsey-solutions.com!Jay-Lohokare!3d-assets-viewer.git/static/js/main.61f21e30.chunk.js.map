{"version":3,"sources":["state-management/api_service.js","state-management/url_service.js","state-management/store.tsx","Components/Loader.js","Components/Error.js","modelDetails/modelsListElement.js","modelDetails/modelsView.js","webGL/dataView.js","webGL/control-panel.js","Components/RefreshButton.js","Components/LayersButton.js","Components/StreetViewModeButton.js","webGL/mapView.js","App.js","Components/ErrorBoundary.js","index.js"],"names":["apiService","mapViewPort","status","searchText","date","requstBody","Viewport","Status","Search","Date","StagedLayers","NetworkLayers","Promise","race","fetch","this","viewer3dURL","method","headers","Accept","body","JSON","stringify","_","reject","setTimeout","Error","response","json","responseJson","console","log","isStaged","CreatedBy","CreatedBySystem","EventType","Message","IsStaged","triggerURL","layerId","viewData","MaxCount","LayerId","baseURLConnectivty","staticResponse","AssetId","Description","Equipement","LineDescription","LineTag","Tag","TR_LINE_REGION_DESC","Owner_Description","Type","geometry","X","Y","Z","RotationX","RotationY","RotationZ","Scale","ModelName","_3dViewerUrl","_baseURL","_gisAssetsUrl","_triggerURL","_baseURLConnectivty","_modelFilesURL","DataStore","width","height","latitude","longitude","zoom","pitch","bearing","getModelList","getConnectivityLayer","viewportCoordinates","dataPanelContent","statusFilter","dateFilter","getFullYear","getMonth","getDate","textFilter","newViewport","transitionInterpolator","LinearInterpolator","transitionDuration","model","newDate","newStatus","newText","viewport","WebMercatorViewport","vwportState","push","unproject","newAssets","assets","assetsLoadingState","useDynamicAssets","getAssetsListAsync","dynamicAssets","concat","useStaticAssets","getAssetsListAsyncStatic","staticAssets","filter","el","errorState","refreshFilters","getConnectivtyDataAsync","getStagedConnectivtyDataAsync","stagedData","runInAction","formatConnectivityData","formatStagedConnectivityData","data","subnetLines","electricDevices","Object","entries","map","x","features","eleDevices","lay","electricDevicesLayer","subnet","paths","individualPath","reduce","pV","cV","subNetConectivity","subnetStagedLines","stagedConnectivityData","FlyToInterpolator","speed","setDataPanelModel","mapStyle","finalArray","from_id","to_id","is_connected","obj","derivedObjectFrom","from","coordinates","find","element","id","to","derivedObjectTo","connectivityData","observable","MAP_STYLE","action","loaderStyle","zIndex","position","top","left","Loader","style","className","React","Component","errorStyle","ModelsListElement","modelViewCallback","props","store","setSelectedModel","key","i","border","backgroundColor","onClick","bind","inject","observer","ModelsView","updateInputValue","evt","updateSearchText","target","value","modelListView","keyValue","loadingState","updateStatus","updateSearchStatus","text","substring","searchAsset","Materialize","toast","html","displayLength","classes","refeshConnectivityLayer","withDataState","placeholder","type","onChange","defaultValue","context","today","tomorrow","setDate","dateElems","document","querySelectorAll","Datepicker","init","format","defaultDate","setDefaultDate","container","autoClose","selectMonths","selectYears","onSelect","updateSearchDate","selectElems","FormSelect","DataView","dataList","ASC","printPretty","object","parent","property","propAccessor","dataDisplay","sort","a","b","order","diff","toLowerCase","localeCompare","sortByText","k","defaultMapStyle","fromJS","categories","layerSelector","background","water","parks","buildings","roads","labels","connectivity","models","colorClass","line","fill","symbol","StyleControls","_defaultLayers","get","state","visibility","color","_updateMapStyle","Modal","Tooltip","name","event","setState","checked","toggleParent","layers","layer","every","test","category","setIn","setMapStyle","set","_onVisibilityChange","disabled","_onColorChange","_renderLayerControl","PureComponent","RefreshButton","refreshClick","data-position","data-tooltip","LayersButton","href","toggleStreetView","registerLoaders","OBJLoader","WebglView","modelLayersList","connectivityLayersList","showConnectivity","showModels","time","refreshAssets","toggleStreetViewMode","_onStyleChange","layerCheck","isChecked","effectsToRender","ambientLight","AmbientLight","intensity","toString","light1","PointLight","light2","light3","light4","LightingEffect","LayersList","meshLayerMat","SimpleMeshLayer","orientation","mesh","material","sizeScale","visible","coordinateSystem","COORDINATE_SYSTEM","LNGLAT","getPosition","d","getOrientation","pickable","toJS","staticPathLayerSubNet","PathLayer","widthMinPixels","opacity","getPath","positionFormat","getColor","getWidth","staticPathLayerSubNetStaged","getDashArray","dashJustified","extensions","PathStyleExtension","dash","initialViewState","controller","onViewStateChange","viewState","updateMapViewport","effects","_renderEffects","_renderLayers","mapboxApiAccessToken","additionalLayers","layersList","App","renderer","data-target","loadedState","sidenav","Sidenav","initiateMap","error","ErrorBoundary","hasError","errorInfo","children","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.61f21e30.chunk.js","sourcesContent":["import URLService from \"./url_service.js\";\nclass APIService extends URLService {\n  async getAssetsListAsync(mapViewPort, status, searchText, date) {\n\n    try {\n      let requstBody = {\n        Viewport: mapViewPort,\n        Status: status,\n        Search: searchText,\n        Date: date,\n        StagedLayers: [0, 1, 2],\n        NetworkLayers: [100, 105, 110, 900],\n      };\n\n      const response = await Promise.race([\n        fetch(`${this.viewer3dURL}`, {\n          method: \"POST\",\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(requstBody),\n        }),\n        new Promise((_, reject) =>\n          setTimeout(() => reject(new Error(\"timeout\")), 30000)\n        ),\n      ]);\n\n      const responseJson = await response.json();\n      return responseJson;\n    } catch (error) {\n      console.log(\"Unable to fetch Assets\");\n      console.log(error);\n    }\n    return null;\n  }\n\n  async getFeatureLayersList(mapViewPort, isStaged) {\n    try {\n      let requstBody = {\n        CreatedBy: \"WebGL\",\n        CreatedBySystem: \"3D\",\n        EventType: \"3D_GET_FEATURE_SERVERS_GIS\",\n        Message: {\n          Viewport: mapViewPort,\n          IsStaged: isStaged,\n        },\n      };\n      const response = await Promise.race([\n        fetch(`${this.triggerURL}`, {\n          method: \"POST\",\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(requstBody),\n        }),\n        new Promise((_, reject) =>\n          setTimeout(() => reject(new Error(\"timeout\")), 20000)\n        ),\n      ]);\n\n      const responseJson = await response.json();\n      return responseJson;\n    } catch (error) {\n      console.log(\"Unable to fetch feature layers\");\n      console.log(error);\n    }\n    return null;\n  }\n\n  async getFeatureLayer(mapViewPort, layerId) {\n    console.log(`Get assets in layers from: ${this.triggerURL}`);\n    try {\n      let requstBody = {\n        CreatedBy: \"WebGL\",\n        CreatedBySystem: \"3D\",\n        EventType: \"3D_GET_ASSETS_IN_VIEWPORT_GIS\",\n        Message: {\n          Viewport: mapViewPort,\n          layerId: layerId,\n        },\n      };\n\n      const response = await Promise.race([\n        fetch(`${this.triggerURL}`, {\n          method: \"POST\",\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(requstBody),\n        }),\n        new Promise((_, reject) =>\n          setTimeout(() => reject(new Error(\"timeout\")), 20000)\n        ),\n      ]);\n\n      const responseJson = await response.json();\n      return responseJson;\n    } catch (error) {\n      console.log(\"Unable to fetch assets in layer \" + layerId);\n      console.log(error);\n    }\n    return null;\n  }\n\n  async getConnectivtyDataAsync(\n    viewData = [\n      [-88.18, 41.75],\n      [-88.18, 41.8],\n      [-88.14, 41.8],\n      [-88.14, 41.75],\n    ]\n  ) {\n    let requstBody = {\n      CreatedBy: \"WebGL\",\n      CreatedBySystem: \"3D\",\n      EventType: \"3D_GET_ASSETS_IN_VIEWPORT_GIS\",\n      Message: {\n        Viewport: viewData,\n        MaxCount: -1,\n        LayerId: 903,\n        IsStaged: false,\n      },\n    };\n\n    // console.log(`get connectivty data from: ${this.baseURLConnectivty}`);\n    try {\n      const response = await fetch(`${this.baseURLConnectivty}`, {\n        method: \"POST\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requstBody),\n      });\n\n      const responseJson = await response.json();\n      return responseJson; //TODO: need to protect this\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  }\n\n  async getStagedConnectivtyDataAsync() {\n    let requstBody = {\n      CreatedBy: \"WebGL\",\n      CreatedBySystem: \"3D\",\n      EventType: \"3D_GET_ASSETS_IN_VIEWPORT_GIS\",\n      Message: {\n        Viewport: [\n          [-90.0, 40.0],\n          [-90.0, 43.0],\n          [-87.0, 43.0],\n          [-87.0, 40.0],\n        ],\n        LayerId: 1,\n        IsStaged: true,\n      },\n    };\n\n    // console.log(`get staging connectivty data from: ${this.baseURLConnectivty}`);\n    try {\n      const response = await fetch(`${this.baseURLConnectivty}`, {\n        method: \"POST\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requstBody),\n      });\n\n      const responseJson = await response.json();\n      return responseJson; //TODO: need to protect this\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  }\n\n  //TErminator 3 (Smaller tower)\n  //Power transformer\n  //Bus support stand -> Sub 34KV Bus Support Stand\n  //40.777371,-76.245457\n  async getAssetsListAsyncStatic() {\n    const staticResponse = [\n\n      {\n        AssetId: \"bee08b85-4e6f-41de-8549-340-24653\",\n        Description: \"Naperville Substation\",\n        Equipement:  \"Naperville Substation\",\n        LineDescription: \"93 - Frackville Orwigsburg\",\n        LineTag: \"MN93\",\n        Tag: \"EP432423200158\",\n        TR_LINE_REGION_DESC: \"Susquehanna\",\n        Owner_Description: \"PPL Owned\",\n        Type: \"Substation\",\n        geometry: {\n          X: -88.171993,\n          Y: 41.7826,\n          Z: 0,\n          RotationX: 0,\n          RotationY: 23,\n          RotationZ: 0,\n          Scale: 0.025,\n          ModelName: \"SubControlHouse\",\n        },\n      },\n\n      {\n        AssetId: \"bee08b85-4e6f-41de-8549-23523\",\n        Description: \"Frackville Substation Transformer #1\",\n        Equipement: \"Frackville Substation Transformer #1\",\n        LineDescription: \"93 - Frackville Orwigsburg\",\n        LineTag: \"MN93\",\n        Tag: \"EP432423200158\",\n        TR_LINE_REGION_DESC: \"Susquehanna\",\n        Owner_Description: \"PPL Owned\",\n        Type: \"Transformer\",\n        geometry: {\n          X: -76.245457,\n          Y: 40.777371,\n          Z: 0,\n          RotationX: 0,\n          RotationY: 0,\n          RotationZ: 0,\n          Scale: 0.0008,\n          ModelName: \"Power Transformer\",\n        },\n      },\n      {\n        AssetId: \"bee08b85-4e6f-41de-8549-435325\",\n        Description: \"Frackville Substation Transformer #2\",\n        Equipement: \"Frackville Substation Transformer #2\",\n        LineDescription: \"93 - Frackville Orwigsburg\",\n        LineTag: \"MN93\",\n        Tag: \"EP432423200158\",\n        TR_LINE_REGION_DESC: \"Susquehanna\",\n        Owner_Description: \"PPL Owned\",\n        Type: \"Transformer\",\n        geometry: {\n          X: -76.245828,\n          Y: 40.777475,\n          Z: 0,\n          RotationX: 0,\n          RotationY: 0,\n          RotationZ: 0,\n          Scale: 0.0008,\n          ModelName: \"Power Transformer\",\n        },\n      }, {\n        AssetId: \"bee08b85-4e6f-41de-8549-345412\",\n        Description: \"Frackville Substation Breaker #1\",\n        Equipement:  \"Frackville Substation Breaker #1\",\n        LineDescription: \"93 - Frackville Orwigsburg\",\n        LineTag: \"MN93\",\n        Tag: \"EP432423200158\",\n        Type: \"Breaker\",\n        TR_LINE_REGION_DESC: \"Susquehanna\",\n        Owner_Description: \"PPL Owned\",\n        geometry: {\n          X: -76.245006,\n          Y: 40.777678,\n          Z: 0,\n          RotationX: 0,\n          RotationY: 0,\n          RotationZ: 0,\n          Scale: 0.4,\n          ModelName: \"12KVCircuitBreaker\",\n        },\n      },\n      {\n        AssetId: \"bee08b85-4e6f-41de-8549-340-8936\",\n        Description: \"Frackville Substation Breaker #2\",\n        Equipement:  \"Frackville Substation Breaker #2\",\n        LineDescription: \"93 - Frackville Orwigsburg\",\n        LineTag: \"MN93\",\n        Tag: \"EP432423200158\",\n        Type: \"Breaker\",\n        TR_LINE_REGION_DESC: \"Susquehanna\",\n        Owner_Description: \"PPL Owned\",\n        geometry: {\n          X: -76.245366,\n          Y: 40.777743,\n          Z: 0,\n          RotationX: 0,\n          RotationY: 0,\n          RotationZ: 0,\n          Scale: 0.4,\n          ModelName: \"12KVCircuitBreaker\",\n        },\n      },\n      {\n        AssetId: \"bee08b85-4e6f-41de-8549-340-24653\",\n        Description: \"Frackville Substation Breaker #3\",\n        Equipement:  \"Frackville Substation Breaker #3\",\n        LineDescription: \"93 - Frackville Orwigsburg\",\n        LineTag: \"MN93\",\n        Tag: \"EP432423200158\",\n        TR_LINE_REGION_DESC: \"Susquehanna\",\n        Owner_Description: \"PPL Owned\",\n        Type: \"Breaker\",\n        geometry: {\n          X: -76.245767, \n          Y: 40.777828,\n          Z: 0,\n          RotationX: 0,\n          RotationY: 0,\n          RotationZ: 0,\n          Scale: 0.4,\n          ModelName: \"12KVCircuitBreaker\",\n        },\n      },\n\n      {\n        AssetId: \"bee08b85-4e6f-41de-8549-340-24652343\",\n        Description: \"Frackville Substation\",\n        Equipement:  \"Frackville Substation\",\n        Type: \"Substation\",\n        geometry: {\n          X: -76.246198, \n          Y: 40.777523,\n          Z: 0,\n          RotationX: 0,\n          RotationY: 70,\n          RotationZ: 0,\n          Scale: 0.03,\n          ModelName: \"SubControlHouse\",\n        },\n      },\n      \n      {\n        AssetId: \"bee08b85-4e6f-41de-8549-340-24653\",\n        Description: \"Frackville Transmission Pole #1\",\n        Equipement:  \"Frackville Transmission Pole #1\",\n        LineDescription: \"93 - Frackville Orwigsburg\",\n        LineTag: \"MN93\",\n        Tag: \"EP432476S800158\",\n        Type: \"Pole\",\n        TR_LINE_REGION_DESC: \"Susquehanna\",\n        Owner_Description: \"PPL Owned\",\n        geometry: {\n          X: -76.249013,\n          Y: 40.773600,\n          Z: 0,\n          RotationX: 0,\n          RotationY: 0,\n          RotationZ: 0,\n          Scale: 1,\n          ModelName: \"EL_POLE\",\n        },\n      },\n\n      {\n        AssetId: \"bee08b85-4e6f-41de-8549-340-24653\",\n        Description: \"Frackville Transmission Pole #2\",\n        Equipement:  \"Frackville Transmission Pole #2\",\n        LineDescription: \"93 - Frackville Orwigsburg\",\n        LineTag: \"MN93\",\n        Tag: \"EP432476S2423158\",\n        Type: \"Pole\",\n        TR_LINE_REGION_DESC: \"Susquehanna\",\n        Owner_Description: \"PPL Owned\",\n        geometry: {\n          X: -76.247280,\n          Y: 40.774276,\n          Z: 0,\n          RotationX: 0,\n          RotationY: 0,\n          RotationZ: 0,\n          Scale: 1,\n          ModelName: \"EL_POLE\",\n        },\n      },\n\n      {\n        AssetId: \"bee08b85-4e6f-41de-8549-340-24653\",\n        Description: \"Frackville Transmission Pole #3\",\n        Equipement:  \"Frackville Transmission Pole #3\",\n        LineDescription: \"93 - Frackville Orwigsburg\",\n        LineTag: \"MN93\",\n        Type: \"Pole\",\n        TR_LINE_REGION_DESC: \"Susquehanna\",\n        Owner_Description: \"PPL Owned\",\n        Tag: \"EP4324352800158\",\n        geometry: {\n          X: -76.245391,\n          Y: 40.774698,\n          Z: 0,\n          RotationX: 0,\n          RotationY: 0,\n          RotationZ: 0,\n          Scale: 1,\n          ModelName: \"EL_POLE\",\n        },\n      },\n      {\n        AssetId: \"bee08b85-4e6f-41de-8549-340-24653\",\n        Description: \"Frackville Transmission Pole #4\",\n        Equipement:  \"Frackville Transmission Pole #4\",\n        LineDescription: \"93 - Frackville Orwigsburg\",\n        LineTag: \"MN93\",\n        Tag: \"EP432423200158\",\n        Type: \"Pole\",\n        TR_LINE_REGION_DESC: \"Susquehanna\",\n        Owner_Description: \"PPL Owned\",\n        geometry: {\n          X: -76.245477,\n          Y: 40.776226,\n          Z: 0,\n          RotationX: 0,\n          RotationY: 0,\n          RotationZ: 0,\n          Scale: 1,\n          ModelName: \"EL_POLE\",\n        },\n      },\n\n      //AUD New assets list\n      {\"Status\":\"new\",\"Equipement\":\"EL_FUSE\",\"Type\":null,\"Description\":\"\",\"AssetId\":\"f77facd5-bf0a-4519-ba67-145d2bb7a915\",\"geometry\":{\"X\":-88.16715464793565,\"Y\":41.78365212448795,\"Z\":8.0,\"Scale\":0.029999999329447746,\"RotationX\":0.0,\"RotationY\":0.0,\"RotationZ\":0.0,\"AssetGroup\":14,\"AssetType\":221,\"LayerId\":0,\"ModelName\":\"EL_FUSE\"}},\n      {\"Status\":\"Approved\",\"Equipement\":\"High Voltage Transformer - AC Three Phase Power\",\"Type\":\"High Voltage Transformer \",\"Description\":\"High Voltage Transformer - AC Three Phase Power\",\"AssetId\":\"6dbeaafa-a1af-4ab5-b4a1-1dca99f14900\",\"geometry\":{\"X\":-88.1717995563818,\"Y\":41.782577501471536,\"Z\":0.0,\"Scale\":0.0003000000142492354,\"RotationX\":0.0,\"RotationY\":90.0,\"RotationZ\":0.0,\"AssetGroup\":11,\"AssetType\":202,\"LayerId\":100,\"ModelName\":\"Power Transformer\"}},\n      {\"Status\":\"new\",\"Equipement\":\"EL_SERVICE_POINT\",\"Type\":null,\"Description\":\"\",\"AssetId\":\"c61c7b80-c8bf-4b0c-9dae-325cd81817c3\",\"geometry\":{\"X\":-88.16697999837643,\"Y\":41.78282212566463,\"Z\":0.0,\"Scale\":0.0,\"RotationX\":0.0,\"RotationY\":0.0,\"RotationZ\":0.0,\"AssetGroup\":36,\"AssetType\":702,\"LayerId\":0,\"ModelName\":null}},\n      {\"Status\":\"new\",\"Equipement\":\"EL_RISER\",\"Type\":null,\"Description\":\"\",\"AssetId\":\"763f5866-95ba-4efb-8277-54c0e235c51d\",\"geometry\":{\"X\":-88.16715464793565,\"Y\":41.78365212448795,\"Z\":6.0,\"Scale\":0.019999999552965164,\"RotationX\":0.0,\"RotationY\":0.0,\"RotationZ\":0.0,\"AssetGroup\":9,\"AssetType\":103,\"LayerId\":0,\"ModelName\":\"EL_RISER\"}},\n      {\"Status\":\"new\",\"Equipement\":\"EL_TRANSFORMER\",\"Type\":null,\"Description\":\"\",\"AssetId\":\"150f2ada-a26a-4e87-8712-65411596bdae\",\"geometry\":{\"X\":-88.16676397511016,\"Y\":41.78303098650768,\"Z\":0.0,\"Scale\":0.05000000074505806,\"RotationX\":0.0,\"RotationY\":0.0,\"RotationZ\":0.0,\"AssetGroup\":38,\"AssetType\":335,\"LayerId\":0,\"ModelName\":\"Pad Mounted Transformer\"}},\n      {\"Status\":\"Approved\",\"Equipement\":\"High Voltage Switch - AC Disconnect\",\"Type\":\"High Voltage Switch \",\"Description\":\"High Voltage Switch - AC Disconnect\",\"AssetId\":\"55e74e25-5cde-42f7-91e6-6e0100f38790\",\"geometry\":{\"X\":-88.17177188313349,\"Y\":41.782467670496885,\"Z\":0.0,\"Scale\":0.20000000298023224,\"RotationX\":0.0,\"RotationY\":0.0,\"RotationZ\":0.0,\"AssetGroup\":10,\"AssetType\":182,\"LayerId\":100,\"ModelName\":\"12KVCircuitBreaker\"}},\n      {\"Status\":\"new\",\"Equipement\":\"EL_POLE\",\"Type\":null,\"Description\":\"\",\"AssetId\":\"4a1a6090-2925-4da0-a088-7dbda8527ed7\",\"geometry\":{\"X\":-88.16723637306694,\"Y\":41.78409623642401,\"Z\":0.0,\"Scale\":1.0,\"RotationX\":0.0,\"RotationY\":0.0,\"RotationZ\":0.0,\"AssetGroup\":121,\"AssetType\":324,\"LayerId\":0,\"ModelName\":\"EL_POLE\"}},\n      {\"Status\":\"new\",\"Equipement\":\"EL_PAD\",\"Type\":null,\"Description\":\"\",\"AssetId\":\"fde09737-47c2-4e1b-b871-82d56d841d32\",\"geometry\":{\"X\":-88.16676397511016,\"Y\":41.78303098650768,\"Z\":0.0,\"Scale\":0.05000000074505806,\"RotationX\":0.0,\"RotationY\":0.0,\"RotationZ\":0.0,\"AssetGroup\":106,\"AssetType\":201,\"LayerId\":0,\"ModelName\":\"Default PAD\"}},\n      {\"Status\":\"Approved\",\"Equipement\":\"High Voltage Switch - AC Circuit Breaker\",\"Type\":\"High Voltage Switch \",\"Description\":\"High Voltage Switch - AC Circuit Breaker\",\"AssetId\":\"03f5f2c4-9d87-4300-b52d-876f6721b2b5\",\"geometry\":{\"X\":-88.1717841096892,\"Y\":41.782484937744336,\"Z\":0.0,\"Scale\":0.20000000298023224,\"RotationX\":0.0,\"RotationY\":0.0,\"RotationZ\":0.0,\"AssetGroup\":10,\"AssetType\":181,\"LayerId\":100,\"ModelName\":\"12KVCircuitBreaker\"}},\n      {\"Status\":\"Approved\",\"Equipement\":\"High Voltage Transformer - AC Three Phase Power\",\"Type\":\"High Voltage Transformer \",\"Description\":\"High Voltage Transformer - AC Three Phase Power\",\"AssetId\":\"d41ef658-588a-4eee-b360-9f94f1fda1ed\",\"geometry\":{\"X\":-88.17186589068018,\"Y\":41.78255410424948,\"Z\":0.0,\"Scale\":0.0003000000142492354,\"RotationX\":0.0,\"RotationY\":90.0,\"RotationZ\":0.0,\"AssetGroup\":11,\"AssetType\":202,\"LayerId\":100,\"ModelName\":\"Power Transformer\"}},\n      {\"Status\":\"new\",\"Equipement\":\"EL_SERVICE_POINT\",\"Type\":null,\"Description\":\"\",\"AssetId\":\"c2e49170-e2ff-4099-be16-b60f7148a9ab\",\"geometry\":{\"X\":-88.16762976239784,\"Y\":41.78263698635166,\"Z\":0.0,\"Scale\":0.0,\"RotationX\":0.0,\"RotationY\":0.0,\"RotationZ\":0.0,\"AssetGroup\":36,\"AssetType\":702,\"LayerId\":0,\"ModelName\":null}},\n      {\"Status\":\"Approved\",\"Equipement\":\"High Voltage Switch - AC Circuit Breaker\",\"Type\":\"High Voltage Switch \",\"Description\":\"High Voltage Switch - AC Circuit Breaker\",\"AssetId\":\"ff1f655d-3a75-4a4c-a8d6-bf4fd64b1c71\",\"geometry\":{\"X\":-88.17179426342898,\"Y\":41.782569851748555,\"Z\":0.0,\"Scale\":0.20000000298023224,\"RotationX\":0.0,\"RotationY\":0.0,\"RotationZ\":0.0,\"AssetGroup\":10,\"AssetType\":181,\"LayerId\":100,\"ModelName\":\"12KVCircuitBreaker\"}},\n      {\"Status\":\"new\",\"Equipement\":\"EL_POLE\",\"Type\":null,\"Description\":\"\",\"AssetId\":\"86dce38e-def4-4b5f-bf77-c9a20542f8bd\",\"geometry\":{\"X\":-88.16846354361029,\"Y\":41.78373360953357,\"Z\":0.0,\"Scale\":1.0,\"RotationX\":0.0,\"RotationY\":0.0,\"RotationZ\":0.0,\"AssetGroup\":121,\"AssetType\":324,\"LayerId\":0,\"ModelName\":\"EL_POLE\"}},\n      {\"Status\":\"new\",\"Equipement\":\"EL_POLE\",\"Type\":null,\"Description\":\"\",\"AssetId\":\"e54bddce-b53c-4fb5-95f9-da35befb46bd\",\"geometry\":{\"X\":-88.16783115929465,\"Y\":41.78391394560283,\"Z\":0.0,\"Scale\":1.0,\"RotationX\":0.0,\"RotationY\":0.0,\"RotationZ\":0.0,\"AssetGroup\":121,\"AssetType\":324,\"LayerId\":0,\"ModelName\":\"EL_POLE\"}},\n      {\"Status\":\"new\",\"Equipement\":\"EL_POLE\",\"Type\":null,\"Description\":\"\",\"AssetId\":\"45c25c08-a4bb-4794-8c72-e61a08e2bfa5\",\"geometry\":{\"X\":-88.16715464793565,\"Y\":41.78365212448795,\"Z\":0.0,\"Scale\":1.0,\"RotationX\":0.0,\"RotationY\":0.0,\"RotationZ\":0.0,\"AssetGroup\":121,\"AssetType\":324,\"LayerId\":0,\"ModelName\":\"EL_POLE\"}},\n      {\"Status\":\"Approved\",\"Equipement\":\"High Voltage Switch - AC Circuit Breaker\",\"Type\":\"High Voltage Switch \",\"Description\":\"High Voltage Switch - AC Circuit Breaker\",\"AssetId\":\"6e2833bd-6196-4743-9a70-efeb3036515c\",\"geometry\":{\"X\":-88.17186305338019,\"Y\":41.782545786310095,\"Z\":0.0,\"Scale\":0.20000000298023224,\"RotationX\":0.0,\"RotationY\":0.0,\"RotationZ\":0.0,\"AssetGroup\":10,\"AssetType\":181,\"LayerId\":100,\"ModelName\":\"12KVCircuitBreaker\"}},\n\n    ];\n    return staticResponse;\n  }\n}\n\nexport let apiService = new APIService();\n","export default class URLService {\n  constructor() {\n    switch (process.env.NODE_ENV ?? \"production\") {\n      case \"production\":\n        this._3dViewerUrl = \"https://pplz-fun-3dviewer-d.pplz-iase-1d.appserviceenvironment.net/api/getAssets/?code=pi1bQZDO6yImPTn0dP2/u2KHTb5GKWsojFrdPMSpzHLENa9wNQ4PgA==\";\n        this._baseURL =\n          \"https://pplz-fun-3dviewer-d.pplz-iase-1d.appserviceenvironment.net/api\";\n        this._gisAssetsUrl =\n          \"https://pplz-fun-gis-d.pplz-iase-1d.appserviceenvironment.net/api/call/GET?code=B94EMuX2I9aOaKutwoWev3FW5e2aZhFpX874/D5XAKsMbQy6psO7dA==\";\n        this._triggerURL =\n          \"https://pplz-fun-autoud-trigger-d.pplz-iase-1d.appserviceenvironment.net/api/call/GET?code=fX7e1NQb5nXVpif/TZOD3hR//1o/MltTDOi1xJojzEjHApWEcHyPhw==\";\n        this._baseURLConnectivty =\n          \"https://pplz-fun-gis-d.pplz-iase-1d.appserviceenvironment.net/api/call/3D_GET_ASSETS_IN_VIEWPORT_GIS?code=B94EMuX2I9aOaKutwoWev3FW5e2aZhFpX874/D5XAKsMbQy6psO7dA==\";\n        this._modelFilesURL = \"https://pplz-fun-3dviewer-d.pplz-iase-1d.appserviceenvironment.net/api/modelfiles/?code=P6HoAEt3ooe/NqpB/Fek4Po1Kqx/a4KsL98Qu1/EI0FPjDYXW2fCzQ==&model_name=\"\n        break;\n      case \"development\":\n        this._3dViewerUrl = \"https://pplz-fun-3dviewer-d.pplz-iase-1d.appserviceenvironment.net/api/getAssets/?code=pi1bQZDO6yImPTn0dP2/u2KHTb5GKWsojFrdPMSpzHLENa9wNQ4PgA==\";\n        this._baseURL =\n          \"https://pplz-fun-3dviewer-d.pplz-iase-1d.appserviceenvironment.net/api\";\n        this._gisAssetsUrl =\n          \"https://pplz-fun-gis-d.pplz-iase-1d.appserviceenvironment.net/api/call/GET?code=B94EMuX2I9aOaKutwoWev3FW5e2aZhFpX874/D5XAKsMbQy6psO7dA==\";\n        this._triggerURL =\n          \"https://pplz-fun-autoud-trigger-d.pplz-iase-1d.appserviceenvironment.net/api/call/GET?code=fX7e1NQb5nXVpif/TZOD3hR//1o/MltTDOi1xJojzEjHApWEcHyPhw==\";\n        this._baseURLConnectivty =\n          \"https://pplz-fun-gis-d.pplz-iase-1d.appserviceenvironment.net/api/call/3D_GET_ASSETS_IN_VIEWPORT_GIS?code=B94EMuX2I9aOaKutwoWev3FW5e2aZhFpX874/D5XAKsMbQy6psO7dA==\";\n        this._modelFilesURL = \"https://pplz-fun-3dviewer-d.pplz-iase-1d.appserviceenvironment.net/api/modelfiles/?code=P6HoAEt3ooe/NqpB/Fek4Po1Kqx/a4KsL98Qu1/EI0FPjDYXW2fCzQ==&model_name=\"\n        break;\n      default:\n        this._3dViewerUrl = \"https://pplz-fun-3dviewer-d.pplz-iase-1d.appserviceenvironment.net/api/getAssets/?code=pi1bQZDO6yImPTn0dP2/u2KHTb5GKWsojFrdPMSpzHLENa9wNQ4PgA==\";\n        this._baseURL =\n          \"https://pplz-fun-3dviewer-d.pplz-iase-1d.appserviceenvironment.net/api\";\n        this._gisAssetsUrl =\n          \"https://pplz-fun-gis-d.pplz-iase-1d.appserviceenvironment.net/api/call/GET?code=B94EMuX2I9aOaKutwoWev3FW5e2aZhFpX874/D5XAKsMbQy6psO7dA==\";\n        this._triggerURL =\n          \"https://pplz-fun-autoud-trigger-d.pplz-iase-1d.appserviceenvironment.net/api/call/GET?code=fX7e1NQb5nXVpif/TZOD3hR//1o/MltTDOi1xJojzEjHApWEcHyPhw==\";\n        this._baseURLConnectivty =\n          \"https://pplz-fun-gis-d.pplz-iase-1d.appserviceenvironment.net/api/call/3D_GET_ASSETS_IN_VIEWPORT_GIS?code=B94EMuX2I9aOaKutwoWev3FW5e2aZhFpX874/D5XAKsMbQy6psO7dA==\";\n        this._modelFilesURL = \"https://pplz-fun-3dviewer-d.pplz-iase-1d.appserviceenvironment.net/api/modelfiles/?code=P6HoAEt3ooe/NqpB/Fek4Po1Kqx/a4KsL98Qu1/EI0FPjDYXW2fCzQ==&model_name=\"\n        break;\n    }\n  }\n\n  // this._baseURL = \"http://localhost:5000\";\n  // this._baseURLAssets = \"http://localhost:5000/assets\";\n  // this._baseURLConnectivty =\n  //   \"http://localhost:5001/3D_GET_ASSET_IN_VIEWPORT.json\";\n\n  get viewer3dURL(){\n    return this._3dViewerUrl;\n  }\n\n  get baseURL() {\n    return this._baseURL;\n  }\n\n  get assetsGISURL() {\n    return this._gisAssetsUrl;\n  }\n\n  get baseURLConnectivty() {\n    return this._baseURLConnectivty;\n  }\n\n  get triggerURL() {\n    return this._triggerURL;\n  }\n\n  get modelFileURL(){\n    return this._modelFilesURL;\n  }\n}\n","import { observable, action, runInAction } from \"mobx\";\n\nimport { apiService } from \"./api_service.js\";\nimport { FlyToInterpolator, LinearInterpolator } from \"react-map-gl\";\nimport MAP_STYLE from \"../map-style-basic-v8.json\";\nimport WebMercatorViewport from \"viewport-mercator-project\";\n\nexport default class DataStore {\n  @observable modelViewerState = true;\n  \n  @observable useStaticAssets = true;\n\n  //Set Boolen to true when changing to API calls\n  @observable useDynamicAssets = false;\n\n  @observable errorState = false;\n\n  @observable assets: any = [];\n  @observable assetsLoadingState = true;\n\n  @observable dataPanelContent = \"Please select a model to view data\";\n\n  @observable mapStyle = MAP_STYLE;\n  @observable connectivityData = null;\n\n  @observable subNetConectivity: any = [];\n  @observable stagedConnectivityData: any = [];\n  @observable electricDevicesLayer: any = [];\n  @observable dateFilter =\n    new Date().getFullYear() +\n    \"-\" +\n    (new Date().getMonth() + 1) +\n    \"-\" +\n    (new Date().getDate() + 1);\n\n  @observable statusFilter = \"All\";\n  @observable textFilter = \"\";\n  @observable viewportCoordinates = [\n    [-88.17231208338957,41.78164438640926],\n    [-88.17231208338957,41.784532458674306],\n    [-88.16407233729582,41.784532458674306],\n    [-88.16407233729582,41.78164438640926]\n  ];\n\n  @observable mapViewPort = {\n    width: \"fit\",\n    height: \"100vh\",\n    latitude: 0,\n    longitude: 0,\n    zoom: 2,\n    pitch: 0,\n    bearing: 0,\n  };\n\n  @action initiateMap(){\n    const newViewport = {\n      width: \"fit\",\n      height: \"100vh\",\n      latitude: 41.7833,\n      longitude: -88.1678,\n      zoom: 17.8,\n      pitch: 0,\n      bearing: 0,\n    };\n    this.mapViewPort = newViewport;\n    this.getModelList();\n    this.getConnectivityLayer(this.viewportCoordinates); // DO NOT REMOVE\n  }\n\n  @action refreshFilters(){\n    this.dataPanelContent = \"Please select a model to view data\";\n    this.statusFilter = \"All\";\n    this.dateFilter = \n    new Date().getFullYear() +\n    \"-\" +\n    (new Date().getMonth() + 1) +\n    \"-\" +\n    (new Date().getDate() + 1);\n    this.textFilter = \"\";\n  }\n\n  @action toggleStreetViewMode() {\n    if (this.mapViewPort.pitch === 0) {\n      const newViewport = {\n        width: \"fit\",\n        height: \"100vh\",\n        longitude: this.mapViewPort.longitude,\n        latitude: this.mapViewPort.latitude,\n        zoom: this.mapViewPort.zoom,\n        transitionInterpolator: new LinearInterpolator([\"pitch\"]),\n        transitionDuration: 1000,\n        pitch: 60,\n        bearing: this.mapViewPort.bearing,\n      };\n      this.mapViewPort = newViewport;\n    } else {\n      const newViewport = {\n        width: \"fit\",\n        height: \"100vh\",\n        longitude: this.mapViewPort.longitude,\n        latitude: this.mapViewPort.latitude,\n        zoom: this.mapViewPort.zoom,\n        transitionInterpolator: new LinearInterpolator([\"pitch\"]),\n        transitionDuration: 1000,\n        pitch: 0,\n        bearing: this.mapViewPort.bearing,\n      };\n      this.mapViewPort = newViewport;\n    }\n  }\n\n  @action setDataPanelModel(model: any) {\n    this.dataPanelContent = model;\n  }\n\n  @action updateSearchDate(newDate: any) {\n    this.dateFilter =\n      newDate.getFullYear() +\n      \"-\" +\n      (newDate.getMonth() + 1) +\n      \"-\" +\n      newDate.getDate();\n  }\n\n  @action updateSearchStatus(newStatus: any) {\n    this.statusFilter = newStatus;\n  }\n\n  @action updateSearchText(newText: any) {\n    this.textFilter = newText;\n  }\n\n  //Change Map view port\n  @action updateMapViewport(newViewport: any) {\n    this.mapViewPort = newViewport;\n    var viewport = new WebMercatorViewport(newViewport);\n    const vwportState = [] as any;\n    vwportState.push(\n      viewport.unproject([0, viewport.height]),\n      viewport.unproject([0, 0]),\n      viewport.unproject([viewport.width, 0]),\n      viewport.unproject([viewport.width, viewport.height])\n    );\n    this.viewportCoordinates = vwportState;\n  }\n\n  //Get list of models\n  @action async getModelList() {\n    let newAssets: any[] = [];\n    this.assets = [];\n    this.assetsLoadingState = true;\n\n    try {\n      if (this.useDynamicAssets) {\n        const dynamicAssets = await apiService.getAssetsListAsync(\n          this.viewportCoordinates,\n          this.statusFilter,\n          this.textFilter,\n          this.dateFilter\n        );\n        if (dynamicAssets != null && dynamicAssets != []){\n          newAssets = newAssets.concat(dynamicAssets);\n        }\n      }\n\n      if (this.useStaticAssets) {\n        const staticAssets = await apiService.getAssetsListAsyncStatic();\n        newAssets = newAssets.concat(staticAssets);\n      }\n\n      this.assets = newAssets.filter(function (el : any) {\n        return 'geometry' in el \n      });\n\n      this.assetsLoadingState = false;\n    } catch {\n      this.assetsLoadingState = false;\n      this.errorState = true;\n    }\n    this.refreshFilters();\n  }\n\n  @action async refeshConnectivityLayer() {\n    this.getConnectivityLayer(this.viewportCoordinates);\n  }\n\n  //Get list of connectivity layers\n  @action async getConnectivityLayer(viewData: Array<Array<number>>) {\n    const response: Object = await apiService.getConnectivtyDataAsync(viewData);\n    const stagedData: Object = await apiService.getStagedConnectivtyDataAsync();\n    runInAction(() => {\n      this.formatConnectivityData(response);\n      this.formatStagedConnectivityData(stagedData);\n    });\n  }\n\n  @action async formatConnectivityData(data: Object) {\n    const subnetLines: any = [];\n    const electricDevices: any = [];\n    // eslint-disable-next-line\n    Object.entries(data).map((x: any) => {\n      switch (x[0]) {\n        case \"100\": //electric devices\n        // eslint-disable-next-line\n          x[1].features.map((eleDevices: any) => {\n            const lay = [eleDevices.geometry[\"x\"], eleDevices.geometry[\"y\"]];\n            electricDevices.push([lay]);\n          });\n          this.electricDevicesLayer = electricDevices || null;\n          break;\n        case \"105\": //electric assemblies\n          break;\n        case \"110\": //electric junction\n          break;\n        case \"115\": //electric lines\n          break;\n        case \"903\": // electric sublines\n        case \"120\":\n          // eslint-disable-next-line\n          x[1].features.map((subnet: any) => {\n            // eslint-disable-next-line\n            subnet.geometry.paths.map((individualPath: any) => {\n              const lay = individualPath.reduce((pV: any, cV: any) => {\n                return [...pV, [cV[0], cV[1], 8.6]];\n              }, []);\n              subnetLines.push([lay]);\n            });\n          });\n          this.subNetConectivity = subnetLines || null;\n          break;\n        case \"900\": // structure junction\n          break;\n        case \"905\": // structure line\n          break;\n        case \"910\": // structure boundary\n          break;\n      }\n    });\n  }\n\n  @action async formatStagedConnectivityData(data: Object) {\n    const subnetStagedLines: any = [];\n    // eslint-disable-next-line\n    Object.entries(data).map((x: any) => {\n      switch (x[0]) {\n        case \"0\": // points\n          break;\n        case \"1\": //lines\n        // eslint-disable-next-line\n          x[1].features.map((subnet: any) => {\n            // eslint-disable-next-line\n            subnet.geometry.paths.map((individualPath: any) => {\n              const lay = individualPath.reduce((pV: any, cV: any) => {\n                return [...pV, [cV[0], cV[1], 8.6]];\n              }, []);\n              subnetStagedLines.push([lay]);\n            });\n          });\n          this.stagedConnectivityData = subnetStagedLines || null;\n          break;\n        case \"2\": //electric junction\n          break;\n      }\n    });\n  }\n\n  //Model selected in menu\n  //Updates viewport and renders models near selected model\n  @action async setSelectedModel(model: any) {\n    const newViewport = {\n      width: \"fit\",\n      height: \"100vh\",\n      longitude: model.geometry.X,\n      latitude: model.geometry.Y,\n      zoom: 18,\n      transitionInterpolator: new FlyToInterpolator({ speed: 3 }),\n      transitionDuration: \"auto\",\n      pitch: 0,\n      bearing: 0,\n    };\n    this.mapViewPort = newViewport;\n    this.setDataPanelModel(model);\n  }\n\n  @action async setMapStyle(map: any) {\n    this.mapStyle = map;\n  }\n\n  @action async setConnectivityModel(data: any) {\n    /**\n     * we need to convert the double linked list from the API response to\n     * a slightly more complext object. This data format takes a line first apporach.\n     * Null nodes can be discarded and from <-> to relationships must be specifically\n     * defined\n     *\n     * Data format:\n     * [\n     *   {\n     *     from: {\n     *       coordinates: [-122.269029, 37.80787]\n     *     },\n     *     to: {\n     *       coordinates: [-122.271604, 37.803664]\n     *   },\n     * ]\n     *\n     */\n    // eslint-disable-next-line\n    let finalArray: any = [];\n    const filteredData = data.filter(\n      (x: any) =>\n        x.from_id != null && x.to_id != null && x.is_connected === true\n    );\n    // eslint-disable-next-line\n    filteredData.map((obj: any) => {\n      const derivedObjectFrom = {\n        from: {\n          coordinates: [\n            data.find((element: any) => element.id === obj.from_id).longitude,\n            data.find((element: any) => element.id === obj.from_id).latitude,\n          ],\n        },\n        to: {\n          coordinates: [\n            data.find((element: any) => element.id === obj.id).longitude,\n            data.find((element: any) => element.id === obj.id).latitude,\n          ],\n        },\n      };\n      const derivedObjectTo = {\n        from: {\n          coordinates: [\n            data.find((element: any) => element.id === obj.id).longitude,\n            data.find((element: any) => element.id === obj.id).latitude,\n          ],\n        },\n        to: {\n          coordinates: [\n            data.find((element: any) => element.id === obj.to_id).longitude,\n            data.find((element: any) => element.id === obj.to_id).latitude,\n          ],\n        },\n      };\n      finalArray.push(derivedObjectTo);\n      finalArray.push(derivedObjectFrom);\n    });\n    this.connectivityData = finalArray;\n  }\n\n  //   @action async fetchCoordinatesConnectivityMock() {\n  //     /**\n  //      * Data format: pathLayer\n  //      * [\n  //      *   {\n  //      *     path: [[-122.4, 37.7], [-122.5, 37.8], [-122.6, 37.85]],\n  //      *     name: 'Richmond - Millbrae',\n  //      *     color: [255, 0, 0]\n  //      *   },\n  //      *   ...\n  //      * ]\n  //      */\n  //     const connectivityLayers: any = [];\n  //     mockConnectivityDataSubNet6.map((convertedLayers: any) => {\n  //       const lay = convertedLayers.geometries.reduce((pV: any, cV: any) => {\n  //         const x = [cV.x, cV.y];\n  //         return [...pV, x];\n  //       }, []);\n  //       connectivityLayers.push([lay]);\n  //     });\n  //     mockConnectivityDataSubNet7.map((convertedLayers: any) => {\n  //       const lay = convertedLayers.geometries.reduce((pV: any, cV: any) => {\n  //         const x = [cV.x, cV.y];\n  //         return [...pV, x];\n  //       }, []);\n  //       connectivityLayers.push([lay]);\n  //     });\n  //     this.subNetConectivity = connectivityLayers || null;\n  // }\n}\n","import React from 'react';\r\n\r\nconst loaderStyle = {\r\n    zIndex: '99999',\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%'\r\n}\r\n\r\nclass Loader extends React.Component {\r\n    render() {\r\n        return (\r\n            <div style={loaderStyle} className=\"preloader-wrapper big active\">\r\n              <div className=\"spinner-layer spinner-blue\">\r\n                <div className=\"circle-clipper left\">\r\n                  <div className=\"circle\"></div>\r\n                </div>\r\n                <div className=\"gap-patch\">\r\n                  <div className=\"circle\">\r\n                  </div>\r\n                </div>\r\n                <div className=\"circle-clipper right\">\r\n                  <div className=\"circle\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loader;","import React from 'react';\n\nconst errorStyle = {\n    zIndex: '99999',\n    position: 'absolute',\n    top: '50%',\n    // left: '3%',\n}\n\nclass Error extends React.Component {\n    render() {\n        return (\n            <div style={errorStyle} className=\"center\" >\n              <h6>API Error. Backend not reachable</h6>\n            </div>\n        );\n    }\n}\n\nexport default Error;","import React, { Component } from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nclass ModelsListElement extends Component {\r\n\r\n  modelViewCallback = () => {\r\n    this.props.store.setSelectedModel(this.props.model);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"menu-card\" key={`${this.props.i}-${this.props.model.Equipement}`}>\r\n        <div className=\"white darken-1\">\r\n            <div className=\"row valign-wrapper\">\r\n\r\n              <div className=\"col l10 s10 m10\">\r\n                <div className=\"left-align\">\r\n                  <p className=\"black-text left-align\">{this.props.model.Equipement}</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col l2 s2 m2\">\r\n                <button \r\n                style={{border: \"none\", backgroundColor: \"transparent\" }}\r\n                className=\"blue-text\" onClick={this.modelViewCallback.bind(this)}>\r\n                  <i className=\"material-icons blue-text\">call_made</i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject(\"store\")(observer(ModelsListElement));\r\n","import React, { Component } from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport ModelsListElement from \"./modelsListElement\";\r\nimport Materialize from \"materialize-css\";\r\nimport Loader from '../Components/Loader';\r\n\r\n\r\n\r\nclass ModelsView extends Component {\r\n\r\n  componentDidMount() {\r\n    var context = this;\r\n\r\n    const today = new Date()\r\n    const tomorrow = new Date(today)\r\n    tomorrow.setDate(tomorrow.getDate() + 1)\r\n\r\n    var dateElems = document.querySelectorAll(\".datepicker\");\r\n    Materialize.Datepicker.init(dateElems, {\r\n      format: \"yyyy-mm-dd\",\r\n      defaultDate: tomorrow,\r\n      setDefaultDate: true,\r\n      container: \"body\",\r\n      autoClose: true,\r\n      selectMonths: true,\r\n      selectYears: 200,\r\n      onSelect: function(date) {\r\n        context.props.store.updateSearchDate(date);\r\n      },\r\n    });\r\n\r\n\r\n    var selectElems = document.querySelectorAll('select');\r\n    Materialize.FormSelect.init(selectElems);\r\n  }\r\n\r\n  updateInputValue = (evt) =>{\r\n    this.props.store.updateSearchText(evt.target.value);\r\n  }\r\n\r\n  modelListView = () => {\r\n    if (this.props.store.assets !== []){\r\n      return (\r\n        <div className=\"assets-list-view\">\r\n          {\r\n            this.props.store.assets.map((model,i) => (\r\n              <ModelsListElement model={model} keyValue={i} key={`${model.Equipement}-${i}`}/>\r\n            ))\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n\r\n  loadingState = () => {\r\n    return <Loader />\r\n  }\r\n\r\n  updateStatus = (evt) => {\r\n    this.props.store.updateSearchStatus(evt.target[evt.target.value].text.substring(8));\r\n  }\r\n\r\n  searchAsset = () => {\r\n    if (this.props.store.mapViewPort.zoom < 12) {\r\n      Materialize.toast({\r\n        html: \"Please zoom in more to load assets\",\r\n        displayLength: 2000,\r\n        classes: \"rounded\",\r\n      });\r\n    }\r\n      this.props.store.getModelList();\r\n      this.props.store.refeshConnectivityLayer();\r\n\r\n  }\r\n\r\n  withDataState = () => {\r\n    return (\r\n      <div className=\"modelsView\">\r\n\r\n        <div className=\"black menu-header center center-align valign-wrapper \">\r\n          <h4 className=\"white-text\">PPL EAM</h4>\r\n        </div>\r\n\r\n        <div className=\"white\">\r\n\r\n          <div  className=\"row padding-5px search-container\">\r\n            <div className=\"card valign-wrapper search-box\">\r\n              <div className=\"input-field col l9 s9 m9\">\r\n                <input className=\"black-text\" id=\"model_filter\" placeholder=\"Search Asset\" type=\"text\" onChange={this.updateInputValue}/>\r\n              </div>\r\n              <div className=\"col l3 s3 m3\">\r\n                <button \r\n                  style={{border: \"none\", backgroundColor: \"transparent\" }}\r\n                  onClick={this.searchAsset}>\r\n                  <i className=\"material-icons black-text\">search</i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"left-align search-filters-list\">\r\n\r\n            <div className=\"input-field chip light-blue darken-3 white-text filter-chip\">\r\n              <div className=\"filter-chip-content \">\r\n                <select id=\"status_selector\" onChange={this.updateStatus}>\r\n                  <option defaultValue value=\"0\">Status: All</option>\r\n                  <option value=\"1\">Status: New</option>\r\n                  <option value=\"2\">Status: Approved</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"chip input-field light-blue darken-3 white-text filter-chip\">\r\n              <div className=\"filter-chip-content\">\r\n                <input id=\"date\" type=\"text\" className=\"datepicker white-text\"/>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        {this.modelListView()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { assetsLoadingState } = this.props.store;\r\n    if (assetsLoadingState === false) {\r\n      return this.withDataState(this.props.store);\r\n    } else {\r\n      return this.loadingState();\r\n    }\r\n  }\r\n}\r\n\r\nexport default inject(\"store\")(observer(ModelsView));\r\n","import React from 'react';\nimport { inject, observer } from \"mobx-react\";\n\n\nconst DataView = inject('store')(observer((props) => {\n\n    let dataList = [];\n    const ASC = 'ascending';\n\n    function sortByText(a, b, order = ASC) {\n        const diff = a.toLowerCase().localeCompare(b.toLowerCase());\n\n        if (order === ASC) {\n            return diff;\n        }\n\n        return -1 * diff;\n    }\n\n    const printPretty = (object, parent) =>{\n        if(typeof object == \"string\"){\n            if(object !== null && object !== \"\"){\n                if(parent==null){\n                    dataList.push(object);\n                }\n                else{\n                    dataList.push(parent + ': \\n' +  object);\n                }\n            }\n        }\n        else{\n            for(var property in object){\n                let propAccessor\n                if(parent !== null){\n                    propAccessor = parent + \".\" + property;\n                }\n                else{\n                    propAccessor = property;\n                }\n                printPretty(object[property], propAccessor);\n            }\n        }\n    }\n\n    printPretty(props.store.dataPanelContent, null)\n\n    let dataDisplay = dataList.sort((a, b) => sortByText(a, b, ASC)).map((i, k) => {\n        return <p key={`${i}-${k}`}>{i}</p>\n    });\n\n\n    return (\n        <div className=\"data-view-card dataOverLay \">\n            <div className=\"data-view-container\">\n                <div className=\"row \">\n                    <div className=\"col l12 s12\">\n                        <h5>Asset Data</h5>\n                        {dataDisplay}\n                        {\n                        props.store.dataPanelContent.AssetId == null ?\n                        <p></p>\n                        : <button className=\"center waves-effect waves-light btn\">View</button>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}))\n\nexport default DataView;\n","import React, { PureComponent } from \"react\";\nimport { fromJS } from \"immutable\";\nimport MAP_STYLE from \"../map-style-basic-v8.json\";\nimport { inject, observer } from \"mobx-react\";\nimport Materialize from \"materialize-css\";\n\nconst defaultMapStyle = fromJS(MAP_STYLE);\nconst categories = [\n  \"labels\",\n  \"roads\",\n  \"buildings\",\n  \"parks\",\n  \"water\",\n  \"background\",\n  \"connectivity\",\n  \"models\",\n];\n\n// Layer id patterns by category\nconst layerSelector = {\n  background: /background/,\n  water: /water/,\n  parks: /park/,\n  buildings: /building/,\n  roads: /bridge|road|tunnel/,\n  labels: /label|place|poi/,\n  connectivity: /trips-layer/,\n  models: /model-layer/,\n};\n\n// Layer color class by type\nconst colorClass = {\n  line: \"line-color\",\n  fill: \"fill-color\",\n  background: \"background-color\",\n  symbol: \"text-color\",\n};\n\nclass StyleControls extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._defaultLayers = defaultMapStyle.get(\"layers\");\n\n    this.state = {\n      visibility: {\n        water: true,\n        parks: true,\n        buildings: true,\n        roads: true,\n        labels: true,\n        background: true,\n        connectivity: false,\n        models: true,\n      },\n      color: {\n        water: \"#DBE2E6\",\n        parks: \"#E6EAE9\",\n        buildings: \"#c0c0c8\",\n        roads: \"#ffffff\",\n        labels: \"#78888a\",\n        background: \"#EBF0F0\",\n      },\n    };\n  }\n\n  componentDidMount() {\n    this._updateMapStyle(this.state);\n\n    Materialize.Modal.init(document.querySelectorAll(\".modal\"));\n    Materialize.Tooltip.init(document.querySelectorAll(\".tooltipped\"));\n  }\n\n  _onColorChange(name, event) {\n    const color = { ...this.state.color, [name]: event.target.value };\n    this.setState({ color });\n    this._updateMapStyle({ ...this.state, color });\n  }\n\n  _onVisibilityChange(name, event) {\n    const visibility = {\n      ...this.state.visibility,\n      [name]: event.target.checked,\n    };\n    this.setState({ visibility });\n    this._updateMapStyle({ ...this.state, visibility });\n    this.props.toggleParent(name, event.target.checked);\n  }\n\n  _updateMapStyle({ visibility, color }) {\n    const layers = this._defaultLayers\n      .filter((layer) => {\n        const id = layer.get(\"id\");\n        return categories.every(\n          (name) => visibility[name] || !layerSelector[name].test(id)\n        );\n      })\n      .map((layer) => {\n        const id = layer.get(\"id\");\n        const type = layer.get(\"type\");\n        const category = categories.find((name) =>\n          layerSelector[name].test(id)\n        );\n        if (category && colorClass[type]) {\n          return layer.setIn([\"paint\", colorClass[type]], color[category]);\n        }\n        return layer;\n      });\n    this.props.setMapStyle(defaultMapStyle.set(\"layers\", layers));\n  }\n\n  _renderLayerControl(name) {\n    const { visibility, color } = this.state;\n    return (\n      <div key={name}>\n        <label className=\"input \" width=\"200%\">\n          <div className=\"row\">\n            <input\n              className=\"col s2 m2 l2\"\n              type=\"checkbox\"\n              checked={visibility[name]}\n              onChange={this._onVisibilityChange.bind(this, name)}\n            />\n\n            <span className=\"col s7 m7 l4 center-aligned center offset-m1 offset-l3 offset-s1\">\n              {name}\n            </span>\n\n            {name === \"connectivity\" || name === \"models\" ? null : (\n              <input\n                className=\"col s2 m2 l1\"\n                type=\"color\"\n                value={color[name]}\n                disabled={!visibility[name]}\n                onChange={this._onColorChange.bind(this, name)}\n              />\n            )}\n          </div>\n        </label>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        \n        <div id=\"modal1\" className=\"modal\">\n          <div className=\"layers-modal-header black\">\n            <h4 className=\"white-text center-align\">Edit Layers</h4>\n          </div>\n          <div className=\"modal-content container center-align\">\n            <div>\n              {categories.map((name) => this._renderLayerControl(name))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default inject(\"store\")(observer(StyleControls));\n","import React from 'react';\n\n\n\nconst RefreshButton = (props) => {\n  return (\n    <div className=\"refresh-button\">\n      <button\n        onClick={props.refreshClick}\n        data-position=\"left\" \n        data-tooltip=\"Search this location\" \n        className=\"btn-floating  tooltipped  btn-large waves-effect waves-dark white \"\n      >\n        <i className=\"material-icons  black-text\">refresh</i>\n      </button>\n    </div>\n  );\n};\n\nexport default RefreshButton","import React from 'react';\n\nconst LayersButton = (props) => {\n  return (\n    <a\n    data-position=\"left\"\n    data-tooltip=\"Edit Layers\"\n    className=\" btn-floating btn-large tooltipped  waves-effect waves-dark white  modal-trigger layers-button\"\n    href=\"#modal1\">\n        <i className=\"material-icons  black-text\">menu</i>\n    </a>\n  );\n};\n\nexport default LayersButton","import React from 'react';\nimport { inject, observer } from \"mobx-react\";\n\n\nconst StreetViewModeButton = (props) => {\n  \n  return (\n    <button\n    data-position=\"left\"\n    data-tooltip={\"Change to \" + (props.store.mapViewPort.pitch === 0 ? \"3D\" : \"2D\") + \" mode\"}\n    className=\" btn-floating black-text btn-large tooltipped  waves-effect waves-dark white  street-view-button\"\n    onClick={props.toggleStreetView}\n    >\n    {props.store.mapViewPort.pitch  === 0 ? \"3D\" : \"2D\"}\n    </button>\n  );\n};\n\nexport default inject(\"store\")(observer(StreetViewModeButton));\n","import React, { Component } from \"react\";\r\nimport DataView from \"./dataView\";\r\nimport { OBJLoader } from \"@loaders.gl/obj\";\r\nimport { registerLoaders } from \"@loaders.gl/core\";\r\nimport Materialize from \"materialize-css\";\r\nimport { SimpleMeshLayer } from \"@deck.gl/mesh-layers\";\r\nimport { PathLayer } from \"@deck.gl/layers\";\r\nimport { COORDINATE_SYSTEM, MapView } from \"@deck.gl/core\";\r\nimport { DirectionalLight, LightingEffect, PointLight, AmbientLight, _CameraLight as CameraLight } from \"@deck.gl/core\";\r\nimport { PathStyleExtension } from \"@deck.gl/extensions\";\r\nimport { DeckGL } from \"@deck.gl/react\";\r\nimport { StaticMap } from \"react-map-gl\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { toJS } from \"mobx\";\r\nimport ControlPanel from \"./control-panel\";\r\nimport RefreshButton from \"../Components/RefreshButton\";\r\nimport LayersButton from \"../Components/LayersButton\";\r\nimport StreetViewModeButton from \"../Components/StreetViewModeButton\";\r\n\r\nregisterLoaders([OBJLoader]);\r\n\r\nconst accessToken =\r\n  \"pk.eyJ1IjoiamF5bG9ob2thcmUiLCJhIjoiY2tkcnI4OHU3MGZ6NDJ0bHFsOHRrcTljeiJ9.D9GoLNq2BgK16q5w3TjJ1g\";\r\n\r\nconst modelFilesURL = \"models/\"\r\n\r\n  // \"https://pplz-fun-3dviewer-d.pplz-iase-1d.appserviceenvironment.net/api/modelfiles/?code=P6HoAEt3ooe/NqpB/Fek4Po1Kqx/a4KsL98Qu1/EI0FPjDYXW2fCzQ==&model_name=\";\r\n\r\nclass WebglView extends Component {\r\n  state = {\r\n      model: this.props.model,\r\n      mapStyle: \"\",\r\n      modelLayersList: [],\r\n      connectivityLayersList: [],\r\n      showConnectivity: false,\r\n      showModels: true,\r\n      time: 0,\r\n    };\r\n\r\n  refreshAssets = async () => {\r\n    if (this.props.store.mapViewPort.zoom < 12) {\r\n      Materialize.toast({\r\n        html: \"Please zoom in more to load assets\",\r\n        displayLength: 2000,\r\n        classes: \"rounded\",\r\n      });\r\n    }\r\n    \r\n      this.props.store.getModelList();\r\n      this.props.store.refeshConnectivityLayer();\r\n    \r\n  };\r\n\r\n  toggleStreetView = async () => {\r\n    this.props.store.toggleStreetViewMode();\r\n  };\r\n\r\n  _onStyleChange = (mapStyle) => this.setState({ mapStyle });\r\n\r\n  layerCheck = (name, isChecked) => {\r\n    if (name === \"models\") {\r\n      this.setState({\r\n        showModels: isChecked,\r\n      });\r\n    } else if (name === \"connectivity\") {\r\n      this.setState({\r\n        showConnectivity: isChecked,\r\n      });\r\n    }\r\n  };\r\n\r\n  _renderEffects() {\r\n\r\n    let effectsToRender = [];\r\n    \r\n    const ambientLight = new AmbientLight({\r\n      color: [255, 255, 255],\r\n      intensity: 1\r\n    });\r\n    effectsToRender.push(ambientLight);\r\n    \r\n    if(this.props.store.assets.toString() != \"\" &&  this.props.store.assets != []){\r\n      this.props.store.assets.map((model) => {\r\n        try{\r\n          if(model){\r\n            const light1 = new PointLight({\r\n              color: [255, 255, 255],\r\n              intensity: 2,\r\n              position: [model.geometry.X, model.geometry.Y, 400]\r\n            });\r\n            effectsToRender.push(light1);\r\n\r\n            const light2 = new PointLight({\r\n              color: [255, 255, 255],\r\n              intensity: 2,\r\n              position: [model.geometry.X-20, model.geometry.Y-20, 400]\r\n            });\r\n            effectsToRender.push(light2);\r\n\r\n            const light3 = new PointLight({\r\n              color: [255, 255, 255],\r\n              intensity: 2,\r\n              position: [model.geometry.X+20, model.geometry.Y+20, 400]\r\n            });\r\n            effectsToRender.push(light3);\r\n\r\n            const light4 = new PointLight({\r\n              color: [255, 255, 255],\r\n              intensity: 2,\r\n              position: [model.geometry.X+20, model.geometry.Y-20, 400]\r\n            });\r\n            effectsToRender.push(light4);\r\n\r\n            const light5 = new PointLight({\r\n              color: [255, 255, 255],\r\n              intensity: 2,\r\n              position: [model.geometry.X-20, model.geometry.Y+20, 400]\r\n            });\r\n            effectsToRender.push(5);\r\n\r\n          }\r\n        }\r\n        catch{}\r\n      });\r\n    }\r\n\r\n    var effects = new LightingEffect(effectsToRender)\r\n    return [effects];\r\n  }\r\n\r\n  _renderLayers() {\r\n    let LayersList = [];\r\n\r\n    const meshLayerMat = {};\r\n    meshLayerMat.ambient = 1;\r\n    meshLayerMat.diffuse = 0.2;\r\n    meshLayerMat.shininess = 0;\r\n\r\n    if(this.props.store.assets.toString() != \"\" &&  this.props.store.assets != []){\r\n      this.props.store.assets.map((model) => {\r\n        if(model){\r\n\r\n          //DO NOT DELETE THIS LOG STATEMENT\r\n          console.log(model.geometry.ModelName, model.Equipement, model.AssetId);\r\n\r\n          try {\r\n            let layer = new SimpleMeshLayer({\r\n              id: `models_${model.AssetId}`,\r\n              data: [\r\n                {\r\n                  position: [model.geometry.X, model.geometry.Y, model.geometry.Z],\r\n                  zoom: 18,\r\n                  orientation: [\r\n                    model.geometry.RotationX,\r\n                    model.geometry.RotationY,\r\n                    model.geometry.RotationZ,\r\n                  ],\r\n                  model: model,\r\n                },\r\n              ],\r\n              mesh: modelFilesURL + model.geometry.ModelName + \".obj\",\r\n              material: meshLayerMat,\r\n              sizeScale: model.geometry.Scale,\r\n              visible: this.state.showModels ? true : false,\r\n              coordinateSystem: COORDINATE_SYSTEM.LNGLAT,\r\n              getPosition: (d) => d.position,\r\n              getOrientation: (d) => d.orientation,\r\n              pickable: true,\r\n              onClick: (event) => {\r\n                this.props.store.setDataPanelModel(event.object.model);\r\n              },\r\n            });\r\n\r\n            LayersList.push(layer);\r\n          } catch {}\r\n        }\r\n      });\r\n    }\r\n    // eslint-disable-next-line\r\n    toJS(this.props.store.subNetConectivity).map((x, i) => {\r\n      const staticPathLayerSubNet = new PathLayer({\r\n        id: `${i}-subnet-connectivity`,\r\n        data: x,\r\n        pickable: false,\r\n        visible: this.state.showConnectivity ? true : false,\r\n        widthMinPixels: 2,\r\n        opacity: 0.6,\r\n        getPath: (d) => d,\r\n        positionFormat: 'XYZ',\r\n        getColor: [253, 128, 93],\r\n        getWidth: (d) => 1,\r\n      });\r\n      LayersList.push(staticPathLayerSubNet);\r\n    });\r\n    \r\n    // eslint-disable-next-line\r\n    toJS(this.props.store.stagedConnectivityData).map((x, i) => {\r\n      const staticPathLayerSubNetStaged = new PathLayer({\r\n        id: `${i}-subnet-connectivity-staged`,\r\n        data: x,\r\n        pickable: false,\r\n        visible: this.state.showConnectivity ? true : false,\r\n        widthMinPixels: 2,\r\n        opacity: 0.76,\r\n        getPath: (d) => d,\r\n        positionFormat: 'XYZ',\r\n        getColor: [246, 0, 0],\r\n        getWidth: (d) => 1,\r\n        getDashArray: [2, 3],\r\n        dashJustified: true,\r\n        extensions: [new PathStyleExtension({ dash: true })],\r\n      });\r\n      LayersList.push(staticPathLayerSubNetStaged);\r\n    });\r\n\r\n    return [LayersList];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n      className=\"mapContainer\" >\r\n        <DeckGL\r\n          initialViewState={this.props.store.mapViewPort}\r\n          controller={true}\r\n          onViewStateChange={({ viewState }) =>\r\n            this.props.store.updateMapViewport(viewState)\r\n          }\r\n          effects={this._renderEffects()}\r\n          layers={this._renderLayers()}\r\n        >\r\n\r\n          <MapView \r\n            id=\"mapView\" \r\n            controller={true}>\r\n            <StaticMap\r\n              mapboxApiAccessToken={accessToken}\r\n              mapStyle={this.state.mapStyle}\r\n            />\r\n          </MapView>\r\n\r\n          <ControlPanel\r\n            setMapStyle={this._onStyleChange}\r\n            additionalLayers={this.state.layersList}\r\n            toggleParent={this.layerCheck}\r\n          />\r\n        </DeckGL>\r\n\r\n        <RefreshButton refreshClick={this.refreshAssets} />\r\n        <LayersButton />\r\n        <StreetViewModeButton toggleStreetView={this.toggleStreetView} />\r\n\r\n        <DataView />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject(\"store\")(observer(WebglView));\r\n","import React, { Component } from \"react\";\r\nimport Loader from \"./Components/Loader\";\r\nimport Error from \"./Components/Error\";\r\nimport ModelsView from \"./modelDetails/modelsView\";\r\nimport WebglView from \"./webGL/mapView\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport Materialize from \"materialize-css\";\r\n\r\nclass App extends Component {\r\n  componentDidUpdate() {\r\n    var sidenav = document.querySelectorAll(\".sidenav\");\r\n    Materialize.Sidenav.init(sidenav, null);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      this.props.store.initiateMap();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  withDataState = (renderer) => {\r\n    return (\r\n      <div>\r\n        <button\r\n          style={{border: \"none\", backgroundColor: \"transparent\" }}\r\n          data-target=\"slide-out\"\r\n          className=\"sidenav-trigger mobileMenu\"\r\n        >\r\n          <i className=\"material-icons black-text menu-icon\">menu</i>\r\n        </button>\r\n\r\n        <ul id=\"slide-out\" className=\"sidenav sidenav-fixed grey lighten-3\">\r\n          {renderer}\r\n        </ul>\r\n\r\n        <WebglView />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  loadingState = () => <Loader />;\r\n  errorState = () => <Error />;\r\n  loadedState = () => <ModelsView />;\r\n\r\n  render() {\r\n    const { assetsLoadingState, errorState } = this.props.store;\r\n    if (errorState === false) {\r\n      if (assetsLoadingState === false) {\r\n        return this.withDataState(this.loadedState());\r\n      } else {\r\n        return this.withDataState(this.loadingState());\r\n      }\r\n    } else {\r\n      return this.withDataState(this.errorState());\r\n    }\r\n  }\r\n}\r\nexport default inject(\"store\")(observer(App));\r\n","import React from \"react\";\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.log(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children; \n  }\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { Provider } from \"mobx-react\";\r\nimport DataStore from \"./state-management/store\";\r\nimport App from \"./App\";\r\nimport ErrorBoundary from './Components/ErrorBoundary';\r\n\r\nconst store = new DataStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ErrorBoundary>\r\n      <App />\r\n    </ErrorBoundary>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}